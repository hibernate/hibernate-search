/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class DocumentRoutesDescriptorDto extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6728432513893267771L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DocumentRoutesDescriptorDto\",\"namespace\":\"org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl\",\"fields\":[{\"name\":\"currentRoute\",\"type\":[{\"type\":\"record\",\"name\":\"DocumentRouteDescriptorDto\",\"fields\":[{\"name\":\"routingKey\",\"type\":[\"string\",\"null\"]}]},\"null\"]},{\"name\":\"previousRoutes\",\"type\":{\"type\":\"array\",\"items\":\"DocumentRouteDescriptorDto\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DocumentRoutesDescriptorDto> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DocumentRoutesDescriptorDto> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<DocumentRoutesDescriptorDto> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<DocumentRoutesDescriptorDto> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<DocumentRoutesDescriptorDto> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this DocumentRoutesDescriptorDto to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a DocumentRoutesDescriptorDto from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a DocumentRoutesDescriptorDto instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static DocumentRoutesDescriptorDto fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto currentRoute;
  private java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> previousRoutes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DocumentRoutesDescriptorDto() {}

  /**
   * All-args constructor.
   * @param currentRoute The new value for currentRoute
   * @param previousRoutes The new value for previousRoutes
   */
  public DocumentRoutesDescriptorDto(org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto currentRoute, java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> previousRoutes) {
    this.currentRoute = currentRoute;
    this.previousRoutes = previousRoutes;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return currentRoute;
    case 1: return previousRoutes;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: currentRoute = (org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto)value$; break;
    case 1: previousRoutes = (java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'currentRoute' field.
   * @return The value of the 'currentRoute' field.
   */
  public org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto getCurrentRoute() {
    return currentRoute;
  }


  /**
   * Sets the value of the 'currentRoute' field.
   * @param value the value to set.
   */
  public void setCurrentRoute(org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto value) {
    this.currentRoute = value;
  }

  /**
   * Gets the value of the 'previousRoutes' field.
   * @return The value of the 'previousRoutes' field.
   */
  public java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> getPreviousRoutes() {
    return previousRoutes;
  }


  /**
   * Sets the value of the 'previousRoutes' field.
   * @param value the value to set.
   */
  public void setPreviousRoutes(java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> value) {
    this.previousRoutes = value;
  }

  /**
   * Creates a new DocumentRoutesDescriptorDto RecordBuilder.
   * @return A new DocumentRoutesDescriptorDto RecordBuilder
   */
  public static org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder newBuilder() {
    return new org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder();
  }

  /**
   * Creates a new DocumentRoutesDescriptorDto RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DocumentRoutesDescriptorDto RecordBuilder
   */
  public static org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder newBuilder(org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder other) {
    if (other == null) {
      return new org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder();
    } else {
      return new org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder(other);
    }
  }

  /**
   * Creates a new DocumentRoutesDescriptorDto RecordBuilder by copying an existing DocumentRoutesDescriptorDto instance.
   * @param other The existing instance to copy.
   * @return A new DocumentRoutesDescriptorDto RecordBuilder
   */
  public static org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder newBuilder(org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto other) {
    if (other == null) {
      return new org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder();
    } else {
      return new org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder(other);
    }
  }

  /**
   * RecordBuilder for DocumentRoutesDescriptorDto instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DocumentRoutesDescriptorDto>
    implements org.apache.avro.data.RecordBuilder<DocumentRoutesDescriptorDto> {

    private org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto currentRoute;
    private org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto.Builder currentRouteBuilder;
    private java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> previousRoutes;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.currentRoute)) {
        this.currentRoute = data().deepCopy(fields()[0].schema(), other.currentRoute);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasCurrentRouteBuilder()) {
        this.currentRouteBuilder = org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto.newBuilder(other.getCurrentRouteBuilder());
      }
      if (isValidValue(fields()[1], other.previousRoutes)) {
        this.previousRoutes = data().deepCopy(fields()[1].schema(), other.previousRoutes);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
    }

    /**
     * Creates a Builder by copying an existing DocumentRoutesDescriptorDto instance
     * @param other The existing instance to copy.
     */
    private Builder(org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.currentRoute)) {
        this.currentRoute = data().deepCopy(fields()[0].schema(), other.currentRoute);
        fieldSetFlags()[0] = true;
      }
      this.currentRouteBuilder = null;
      if (isValidValue(fields()[1], other.previousRoutes)) {
        this.previousRoutes = data().deepCopy(fields()[1].schema(), other.previousRoutes);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'currentRoute' field.
      * @return The value.
      */
    public org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto getCurrentRoute() {
      return currentRoute;
    }


    /**
      * Sets the value of the 'currentRoute' field.
      * @param value The value of 'currentRoute'.
      * @return This builder.
      */
    public org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder setCurrentRoute(org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto value) {
      validate(fields()[0], value);
      this.currentRouteBuilder = null;
      this.currentRoute = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'currentRoute' field has been set.
      * @return True if the 'currentRoute' field has been set, false otherwise.
      */
    public boolean hasCurrentRoute() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'currentRoute' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto.Builder getCurrentRouteBuilder() {
      if (currentRouteBuilder == null) {
        if (hasCurrentRoute()) {
          setCurrentRouteBuilder(org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto.newBuilder(currentRoute));
        } else {
          setCurrentRouteBuilder(org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto.newBuilder());
        }
      }
      return currentRouteBuilder;
    }

    /**
     * Sets the Builder instance for the 'currentRoute' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder setCurrentRouteBuilder(org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto.Builder value) {
      clearCurrentRoute();
      currentRouteBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currentRoute' field has an active Builder instance
     * @return True if the 'currentRoute' field has an active Builder instance
     */
    public boolean hasCurrentRouteBuilder() {
      return currentRouteBuilder != null;
    }

    /**
      * Clears the value of the 'currentRoute' field.
      * @return This builder.
      */
    public org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder clearCurrentRoute() {
      currentRoute = null;
      currentRouteBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'previousRoutes' field.
      * @return The value.
      */
    public java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> getPreviousRoutes() {
      return previousRoutes;
    }


    /**
      * Sets the value of the 'previousRoutes' field.
      * @param value The value of 'previousRoutes'.
      * @return This builder.
      */
    public org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder setPreviousRoutes(java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> value) {
      validate(fields()[1], value);
      this.previousRoutes = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'previousRoutes' field has been set.
      * @return True if the 'previousRoutes' field has been set, false otherwise.
      */
    public boolean hasPreviousRoutes() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'previousRoutes' field.
      * @return This builder.
      */
    public org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder clearPreviousRoutes() {
      previousRoutes = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DocumentRoutesDescriptorDto build() {
      try {
        DocumentRoutesDescriptorDto record = new DocumentRoutesDescriptorDto();
        if (currentRouteBuilder != null) {
          try {
            record.currentRoute = this.currentRouteBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currentRoute"));
            throw e;
          }
        } else {
          record.currentRoute = fieldSetFlags()[0] ? this.currentRoute : (org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto) defaultValue(fields()[0]);
        }
        record.previousRoutes = fieldSetFlags()[1] ? this.previousRoutes : (java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto>) defaultValue(fields()[1]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DocumentRoutesDescriptorDto>
    WRITER$ = (org.apache.avro.io.DatumWriter<DocumentRoutesDescriptorDto>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DocumentRoutesDescriptorDto>
    READER$ = (org.apache.avro.io.DatumReader<DocumentRoutesDescriptorDto>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.currentRoute == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      this.currentRoute.customEncode(out);
    }

    long size0 = this.previousRoutes.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto e0: this.previousRoutes) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 0) {
        in.readNull();
        this.currentRoute = null;
      } else {
        if (this.currentRoute == null) {
          this.currentRoute = new org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto();
        }
        this.currentRoute.customDecode(in);
      }

      long size0 = in.readArrayStart();
      java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> a0 = this.previousRoutes;
      if (a0 == null) {
        a0 = new SpecificData.Array<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto>((int)size0, SCHEMA$.getField("previousRoutes").schema());
        this.previousRoutes = a0;
      } else a0.clear();
      SpecificData.Array<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 0) {
            in.readNull();
            this.currentRoute = null;
          } else {
            if (this.currentRoute == null) {
              this.currentRoute = new org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto();
            }
            this.currentRoute.customDecode(in);
          }
          break;

        case 1:
          long size0 = in.readArrayStart();
          java.util.List<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> a0 = this.previousRoutes;
          if (a0 == null) {
            a0 = new SpecificData.Array<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto>((int)size0, SCHEMA$.getField("previousRoutes").schema());
            this.previousRoutes = a0;
          } else a0.clear();
          SpecificData.Array<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new org.hibernate.search.mapper.orm.outboxpolling.avro.generated.impl.DocumentRouteDescriptorDto();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










