/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PojoIndexingQueueEventPayloadDto extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2218456874397064735L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PojoIndexingQueueEventPayloadDto\",\"namespace\":\"org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl\",\"fields\":[{\"name\":\"routes\",\"type\":{\"type\":\"record\",\"name\":\"DocumentRoutesDescriptorDto\",\"fields\":[{\"name\":\"currentRoute\",\"type\":[{\"type\":\"record\",\"name\":\"DocumentRouteDescriptorDto\",\"fields\":[{\"name\":\"routingKey\",\"type\":[\"string\",\"null\"]}]},\"null\"]},{\"name\":\"previousRoutes\",\"type\":{\"type\":\"array\",\"items\":\"DocumentRouteDescriptorDto\"}}]}},{\"name\":\"dirtiness\",\"type\":{\"type\":\"record\",\"name\":\"DirtinessDescriptorDto\",\"fields\":[{\"name\":\"forceSelfDirty\",\"type\":\"boolean\"},{\"name\":\"forceContainingDirty\",\"type\":\"boolean\"},{\"name\":\"dirtyPaths\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"updateBecauseOfContained\",\"type\":\"boolean\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PojoIndexingQueueEventPayloadDto> ENCODER =
      new BinaryMessageEncoder<PojoIndexingQueueEventPayloadDto>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PojoIndexingQueueEventPayloadDto> DECODER =
      new BinaryMessageDecoder<PojoIndexingQueueEventPayloadDto>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PojoIndexingQueueEventPayloadDto> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PojoIndexingQueueEventPayloadDto> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PojoIndexingQueueEventPayloadDto> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PojoIndexingQueueEventPayloadDto>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PojoIndexingQueueEventPayloadDto to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PojoIndexingQueueEventPayloadDto from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PojoIndexingQueueEventPayloadDto instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PojoIndexingQueueEventPayloadDto fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto routes;
  private org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto dirtiness;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PojoIndexingQueueEventPayloadDto() {}

  /**
   * All-args constructor.
   * @param routes The new value for routes
   * @param dirtiness The new value for dirtiness
   */
  public PojoIndexingQueueEventPayloadDto(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto routes, org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto dirtiness) {
    this.routes = routes;
    this.dirtiness = dirtiness;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return routes;
    case 1: return dirtiness;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: routes = (org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto)value$; break;
    case 1: dirtiness = (org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'routes' field.
   * @return The value of the 'routes' field.
   */
  public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto getRoutes() {
    return routes;
  }


  /**
   * Sets the value of the 'routes' field.
   * @param value the value to set.
   */
  public void setRoutes(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto value) {
    this.routes = value;
  }

  /**
   * Gets the value of the 'dirtiness' field.
   * @return The value of the 'dirtiness' field.
   */
  public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto getDirtiness() {
    return dirtiness;
  }


  /**
   * Sets the value of the 'dirtiness' field.
   * @param value the value to set.
   */
  public void setDirtiness(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto value) {
    this.dirtiness = value;
  }

  /**
   * Creates a new PojoIndexingQueueEventPayloadDto RecordBuilder.
   * @return A new PojoIndexingQueueEventPayloadDto RecordBuilder
   */
  public static org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder newBuilder() {
    return new org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder();
  }

  /**
   * Creates a new PojoIndexingQueueEventPayloadDto RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PojoIndexingQueueEventPayloadDto RecordBuilder
   */
  public static org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder newBuilder(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder other) {
    if (other == null) {
      return new org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder();
    } else {
      return new org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder(other);
    }
  }

  /**
   * Creates a new PojoIndexingQueueEventPayloadDto RecordBuilder by copying an existing PojoIndexingQueueEventPayloadDto instance.
   * @param other The existing instance to copy.
   * @return A new PojoIndexingQueueEventPayloadDto RecordBuilder
   */
  public static org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder newBuilder(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto other) {
    if (other == null) {
      return new org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder();
    } else {
      return new org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder(other);
    }
  }

  /**
   * RecordBuilder for PojoIndexingQueueEventPayloadDto instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PojoIndexingQueueEventPayloadDto>
    implements org.apache.avro.data.RecordBuilder<PojoIndexingQueueEventPayloadDto> {

    private org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto routes;
    private org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder routesBuilder;
    private org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto dirtiness;
    private org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto.Builder dirtinessBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.routes)) {
        this.routes = data().deepCopy(fields()[0].schema(), other.routes);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasRoutesBuilder()) {
        this.routesBuilder = org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.newBuilder(other.getRoutesBuilder());
      }
      if (isValidValue(fields()[1], other.dirtiness)) {
        this.dirtiness = data().deepCopy(fields()[1].schema(), other.dirtiness);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasDirtinessBuilder()) {
        this.dirtinessBuilder = org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto.newBuilder(other.getDirtinessBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing PojoIndexingQueueEventPayloadDto instance
     * @param other The existing instance to copy.
     */
    private Builder(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.routes)) {
        this.routes = data().deepCopy(fields()[0].schema(), other.routes);
        fieldSetFlags()[0] = true;
      }
      this.routesBuilder = null;
      if (isValidValue(fields()[1], other.dirtiness)) {
        this.dirtiness = data().deepCopy(fields()[1].schema(), other.dirtiness);
        fieldSetFlags()[1] = true;
      }
      this.dirtinessBuilder = null;
    }

    /**
      * Gets the value of the 'routes' field.
      * @return The value.
      */
    public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto getRoutes() {
      return routes;
    }


    /**
      * Sets the value of the 'routes' field.
      * @param value The value of 'routes'.
      * @return This builder.
      */
    public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder setRoutes(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto value) {
      validate(fields()[0], value);
      this.routesBuilder = null;
      this.routes = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'routes' field has been set.
      * @return True if the 'routes' field has been set, false otherwise.
      */
    public boolean hasRoutes() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'routes' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder getRoutesBuilder() {
      if (routesBuilder == null) {
        if (hasRoutes()) {
          setRoutesBuilder(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.newBuilder(routes));
        } else {
          setRoutesBuilder(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.newBuilder());
        }
      }
      return routesBuilder;
    }

    /**
     * Sets the Builder instance for the 'routes' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder setRoutesBuilder(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto.Builder value) {
      clearRoutes();
      routesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'routes' field has an active Builder instance
     * @return True if the 'routes' field has an active Builder instance
     */
    public boolean hasRoutesBuilder() {
      return routesBuilder != null;
    }

    /**
      * Clears the value of the 'routes' field.
      * @return This builder.
      */
    public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder clearRoutes() {
      routes = null;
      routesBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'dirtiness' field.
      * @return The value.
      */
    public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto getDirtiness() {
      return dirtiness;
    }


    /**
      * Sets the value of the 'dirtiness' field.
      * @param value The value of 'dirtiness'.
      * @return This builder.
      */
    public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder setDirtiness(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto value) {
      validate(fields()[1], value);
      this.dirtinessBuilder = null;
      this.dirtiness = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'dirtiness' field has been set.
      * @return True if the 'dirtiness' field has been set, false otherwise.
      */
    public boolean hasDirtiness() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'dirtiness' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto.Builder getDirtinessBuilder() {
      if (dirtinessBuilder == null) {
        if (hasDirtiness()) {
          setDirtinessBuilder(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto.newBuilder(dirtiness));
        } else {
          setDirtinessBuilder(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto.newBuilder());
        }
      }
      return dirtinessBuilder;
    }

    /**
     * Sets the Builder instance for the 'dirtiness' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder setDirtinessBuilder(org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto.Builder value) {
      clearDirtiness();
      dirtinessBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'dirtiness' field has an active Builder instance
     * @return True if the 'dirtiness' field has an active Builder instance
     */
    public boolean hasDirtinessBuilder() {
      return dirtinessBuilder != null;
    }

    /**
      * Clears the value of the 'dirtiness' field.
      * @return This builder.
      */
    public org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.PojoIndexingQueueEventPayloadDto.Builder clearDirtiness() {
      dirtiness = null;
      dirtinessBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PojoIndexingQueueEventPayloadDto build() {
      try {
        PojoIndexingQueueEventPayloadDto record = new PojoIndexingQueueEventPayloadDto();
        if (routesBuilder != null) {
          try {
            record.routes = this.routesBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("routes"));
            throw e;
          }
        } else {
          record.routes = fieldSetFlags()[0] ? this.routes : (org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto) defaultValue(fields()[0]);
        }
        if (dirtinessBuilder != null) {
          try {
            record.dirtiness = this.dirtinessBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("dirtiness"));
            throw e;
          }
        } else {
          record.dirtiness = fieldSetFlags()[1] ? this.dirtiness : (org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PojoIndexingQueueEventPayloadDto>
    WRITER$ = (org.apache.avro.io.DatumWriter<PojoIndexingQueueEventPayloadDto>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PojoIndexingQueueEventPayloadDto>
    READER$ = (org.apache.avro.io.DatumReader<PojoIndexingQueueEventPayloadDto>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.routes.customEncode(out);

    this.dirtiness.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.routes == null) {
        this.routes = new org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto();
      }
      this.routes.customDecode(in);

      if (this.dirtiness == null) {
        this.dirtiness = new org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto();
      }
      this.dirtiness.customDecode(in);

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.routes == null) {
            this.routes = new org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DocumentRoutesDescriptorDto();
          }
          this.routes.customDecode(in);
          break;

        case 1:
          if (this.dirtiness == null) {
            this.dirtiness = new org.hibernate.search.mapper.orm.coordination.outboxpolling.avro.generated.impl.DirtinessDescriptorDto();
          }
          this.dirtiness.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










