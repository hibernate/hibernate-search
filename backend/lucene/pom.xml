<?xml version="1.0"?>
<project
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.search</groupId>
        <artifactId>hibernate-search-parent</artifactId>
        <version>6.0.0-SNAPSHOT</version>
        <relativePath>../..</relativePath>
    </parent>
    <artifactId>hibernate-search-backend-lucene</artifactId>

    <name>Hibernate Search Backend - Lucene</name>
    <description>Hibernate Search Backend relying on embedded instances of Lucene</description>

    <properties>
        <java.module.name>org.hibernate.search.backend.lucene</java.module.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.hibernate.search</groupId>
            <artifactId>hibernate-search-engine</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-join</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging-annotations</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Automatic-Module-Name>${java.module.name}</Automatic-Module-Name>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>module-descriptors</id>
            <activation>
                <jdk>[11,)</jdk>
            </activation>
            <!--
                TODO HSEARCH-3274
                Trying to generate module info, we got some issues on package names

                Invocation of jdeps failed: jdeps -generate-module-info ...
                Error: Module lucene.sandbox contains package org.apache.lucene.search, module lucene.core exports package org.apache.lucene.search to lucene.sandbox

                The problem seems to be that we depend on Lucene as a module,
                whereas we should only depend on it as a package of the unnamed module,
                because Lucene has split packages and thus cannot be consumed as a module.

                To solve this, a good first step would be to tell moditect to ignore some dependencies (Lucene dependencies)...
                is that even possible?
                Then we should be able to at least run Hibernate Search as module by passing
                `-add-reads org.hibernate.search.backend.lucene=ALL-UNNAMED` to the JVM,
                telling it to allow Hibernate Search to access classes of the unnamed module.

                A second step would be to express the dependency to the unnamed module directly in the module-info descriptor,
                but I'm not sure this is even possible.
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.moditect</groupId>
                        <artifactId>moditect-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-module-infos</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>add-module-info</goal>
                                </goals>
                                <configuration>
                                    <module>
                                        <moduleInfo>
                                            <name>${java.module.name}</name>
                                            <exports>
                                                !org.hibernate.search.*.impl;
                                                !org.hibernate.search.*.impl.*;
                                                *;
                                            </exports>
                                        </moduleInfo>
                                    </module>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            -->
        </profile>
    </profiles>
</project>
