<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.search</groupId>
        <artifactId>hibernate-search-integrationtest</artifactId>
        <version>6.0.0-SNAPSHOT</version>
        <relativePath>../..</relativePath>
    </parent>
    <artifactId>hibernate-search-integrationtest-showcase-library</artifactId>

    <name>Hibernate Search Integration Tests - Showcase - Library</name>
    <description>Hibernate Search showcase based on the ORM and Elasticsearch integrations, using libraries and books as business objects</description>

    <properties>
        <version.org.springframework.boot>2.2.0.RELEASE</version.org.springframework.boot>

        <!--
            Remove Hibernate system properties from parent settings:
            They are supposed to be handled by the spring.datasource subsystem
            and not by the Hibernate internal pool!
            See also the failsafe configuration.
         -->
        <failsafe.jvm.args.hibernate-orm></failsafe.jvm.args.hibernate-orm>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${version.org.springframework.boot}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.hibernate.search</groupId>
            <artifactId>hibernate-search-mapper-orm</artifactId>
        </dependency>
        <!-- Only necessary when using the Lucene backend -->
        <dependency>
            <groupId>org.hibernate.search</groupId>
            <artifactId>hibernate-search-backend-lucene</artifactId>
        </dependency>
        <!-- Only necessary when using the Elasticsearch backend -->
        <dependency>
            <groupId>org.hibernate.search</groupId>
            <artifactId>hibernate-search-backend-elasticsearch</artifactId>
        </dependency>
        <!-- Only necessary when targeting an Elasticsearch service provided by AWS -->
        <dependency>
            <groupId>org.hibernate.search</groupId>
            <artifactId>hibernate-search-backend-elasticsearch-aws</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <!-- Using JBoss Logging -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.hibernate.search</groupId>
            <artifactId>hibernate-search-util-internal-integrationtest-mapper-orm</artifactId>
            <scope>test</scope>
            <exclusions>
                <!-- Spring Boot uses Mockito -->
                <exclusion>
                    <groupId>org.easymock</groupId>
                    <artifactId>easymock</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--
            Leave this dependency here, not in a utils module, so that we don't need to recompile
            the utils to re-run the tests with a different database.
         -->
        <dependency>
            <groupId>${jdbc.driver.groupId}</groupId>
            <artifactId>${jdbc.driver.artifactId}</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <!-- Using JBoss Logging -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Enable extracting shared test build resources -->
        <!-- See how maven-dependency-plugin is configured in the parent pom -->
        <dependency>
            <groupId>org.hibernate.search</groupId>
            <artifactId>hibernate-search-util-internal-integrationtest-sharedresources</artifactId>
            <classifier>build-resources</classifier>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <!--
                        Since we do not pass the Hibernate ORM settings through system properties directly
                        (see the override of the failsafe.jvm.args.hibernate-orm near the top of this file),
                        we need to pass the settings some other way.
                        Here we chose to use environment variables.
                     -->
                    <environmentVariables>
                        <HIBERNATE_DIALECT>${db.dialect}</HIBERNATE_DIALECT>
                        <JDBC_DRIVER>${jdbc.driver}</JDBC_DRIVER>
                        <JDBC_URL>${jdbc.url}</JDBC_URL>
                        <JDBC_USERNAME>${jdbc.user}</JDBC_USERNAME>
                        <JDBC_PASSWORD>${jdbc.pass}</JDBC_PASSWORD>
                        <JDBC_ISOLATION>${jdbc.isolation}</JDBC_ISOLATION>
                        <ELASTICSEARCH_URL>${test.elasticsearch.host.url}</ELASTICSEARCH_URL>
                        <ELASTICSEARCH_USERNAME>${test.elasticsearch.host.username}</ELASTICSEARCH_USERNAME>
                        <ELASTICSEARCH_PASSWORD>${test.elasticsearch.host.password}</ELASTICSEARCH_PASSWORD>
                        <ELASTICSEARCH_AWS_SIGNING_ENABLED>${test.elasticsearch.host.aws.signing.enabled}</ELASTICSEARCH_AWS_SIGNING_ENABLED>
                        <ELASTICSEARCH_AWS_SIGNING_ACCESS_KEY>${test.elasticsearch.host.aws.signing.access_key}</ELASTICSEARCH_AWS_SIGNING_ACCESS_KEY>
                        <ELASTICSEARCH_AWS_SIGNING_SECRET_LEY>${test.elasticsearch.host.aws.signing.secret_key}</ELASTICSEARCH_AWS_SIGNING_SECRET_LEY>
                        <ELASTICSEARCH_AWS_SIGNING_REGION>${test.elasticsearch.host.aws.signing.region}</ELASTICSEARCH_AWS_SIGNING_REGION>
                        <!--
                             The test settings add a different suffix to this value for each test execution.
                             We can't add this suffix (${random.uuid}) here due to IDEA limitations:
                             IDEA just ignores this environment variable if it finds a reference to an unknown property
                             such as "${random.uuid}".
                         -->
                        <LUCENE_ROOT_PATH>${project.build.directory}/test-indexes/</LUCENE_ROOT_PATH>
                    </environmentVariables>
                </configuration>

                <executions>
                    <execution>
                        <id>it-lucene</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <reportNameSuffix>${surefire.environment}-${surefire.executing-module}-lucene</reportNameSuffix>
                            <systemPropertyVariables>
                                <!-- See TestActiveProfilesResolver -->
                                <test.backend>lucene</test.backend>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>it-elasticsearch</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <reportNameSuffix>${surefire.environment}-${surefire.executing-module}-elasticsearch</reportNameSuffix>
                            <systemPropertyVariables>
                                <!-- See TestActiveProfilesResolver -->
                                <test.backend>elasticsearch</test.backend>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>it-verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <!-- Inherit execution unpack-shared-test-build-resources -->
            </plugin>
            <plugin>
                <groupId>com.github.alexcojocaru</groupId>
                <artifactId>elasticsearch-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>

