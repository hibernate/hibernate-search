<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Hibernate Search, full-text search for your domain model
 ~
 ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later
 ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>hibernate-search-parent</artifactId>
        <groupId>org.hibernate</groupId>
        <version>5.11.0-SNAPSHOT</version>
        <relativePath>../../../pom.xml</relativePath>
    </parent>

    <artifactId>hibernate-search-performance-orm</artifactId>
    <name>Hibernate Search ORM Performance Tests</name>
    <description>Hibernate Search ORM Performance Tests</description>

    <properties>
        <!--
        Disable the dependency convergence rule, because the dependencies of WildFly feature packs do not converge
        -->
        <enforcer.dependencyconvergence.skip>true</enforcer.dependencyconvergence.skip>
        <scenario></scenario>
        <serverName>wildfly-${version.wildfly}</serverName>
        <jbosshome>${project.build.directory}/${serverName}/</jbosshome>

        <!--
            Relax the JVM restrictions on the client side of Arquillian:
            strict restrictions wouldn't work and it's not what we want to check.
         -->
        <surefire.jvm.args.java-version>${surefire.jvm.args.java-version.lenient}</surefire.jvm.args.java-version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- We override the version of ShrinkWrap Maven Resolver from Arquillian BOM:
             this section must be declared before the Arquillian bom import -->
            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>${version.org.jboss.shrinkwrap.resolver}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Imports compatible versions for each Arquillian module -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${version.org.jboss.arquillian}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-hikaricp</artifactId>
            <version>${version.org.hibernate}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-integrationtest-wildfly</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${jdbc.driver.groupId}</groupId>
            <artifactId>${jdbc.driver.artifactId}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-depchain</artifactId>
            <scope>test</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <version>${version.org.wildfly.arquillian}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>log4j-jboss-logmanager</artifactId>
                </exclusion>
                <!-- This exclusion is needed to be able to setup the project in Windows:
                     it otherwise includes transitive dependency to the JDK JConsole -->
                <exclusion>
                    <artifactId>wildfly-patching</artifactId>
                    <groupId>org.wildfly</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
            <scope>test</scope>
            <exclusions>
                <!-- This exclusion is needed to be able to setup the project in Windows:
                     it otherwise includes transitive dependency to the JDK JConsole -->
                <exclusion>
                    <artifactId>wildfly-patching</artifactId>
                    <groupId>org.wildfly</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-engine</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-infinispan</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-jsr352-jberet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.batch</groupId>
            <artifactId>javax.batch-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.ibm.jbatch</groupId>
            <artifactId>com.ibm.jbatch-runtime</artifactId>
            <version>${version.com.ibm.jbatch}</version>
            <scope>test</scope>
        </dependency>
        <!--
            JBatch requires a database in order to work, and it seems it uses SQL that won't work with H2.
            Anyway, it uses an embedded Derby instance by default, so we just put the Derby driver in the classpath
            so it won't complain.
         -->
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>${version.org.apache.derby}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.wildfly.build</groupId>
                <artifactId>wildfly-server-provisioning-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>server-provisioning</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <skip>${skipWildFlyPreparation}</skip>
                            <config-file>server-provisioning.xml</config-file>
                            <server-name>${serverName}</server-name>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <!--
                          This allows to run mvn clean install -am -pl :thismodule
                          and have Maven re-build WildFly modules automatically.
                          Otherwise the plugin would simply try to fetch the
                          version in the local repository.
                     -->
                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>hibernate-search-jbossmodules-engine</artifactId>
                        <type>zip</type>
                        <version>${project.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>hibernate-search-jbossmodules-orm</artifactId>
                        <type>zip</type>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-drivers</id>
                        <!-- Must execute after "generate-test-resources", during which we create the WildFly directory -->
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <skip>${skipWildFlyPreparation}</skip>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${jdbc.driver.groupId}</groupId>
                                    <artifactId>${jdbc.driver.artifactId}</artifactId>
                                    <version>${jdbc.driver.version}</version>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${jbosshome}/standalone/deployments</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <id>latest</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-search-testing</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>hsearch450</id>
            <dependencies>
                <dependency>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-search-testing</artifactId>
                    <version>4.5.0.CR1</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <!-- Override some dependencies -->
                <hibernateVersion>4.3.1.Final</hibernateVersion>
            </properties>
        </profile>
    </profiles>

    <!--
        Enable a hard-coded JBoss repository configuration in WildFly-related tests.
        This allows us to run a CI job with default Maven settings,
        checking that any other module only relies on dependencies available in Maven Central.
     -->
    <repositories>
        <!-- Use Central first -->
        <repository>
            <id>central</id>
            <name>Maven Central</name>
            <url>http://repo.maven.apache.org/maven2/</url>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Maven Repository Group</name>
            <url>${jboss.public.repo.url}</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <!-- Use Central first -->
        <pluginRepository>
            <id>central</id>
            <name>Maven Central</name>
            <url>http://repo.maven.apache.org/maven2/</url>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Maven Repository Group</name>
            <url>${jboss.public.repo.url}</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
