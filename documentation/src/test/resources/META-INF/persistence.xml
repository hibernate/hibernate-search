<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Hibernate Search, full-text search for your domain model
 ~
 ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later
 ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
  -->
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.2"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
    <persistence-unit name="GettingStartedWithoutHibernateSearchIT">
        <class>org.hibernate.search.documentation.gettingstarted.withouthsearch.Author</class>
        <class>org.hibernate.search.documentation.gettingstarted.withouthsearch.Book</class>
        <exclude-unlisted-classes />
        <properties>
        </properties>
    </persistence-unit>

    <persistence-unit name="GettingStartedWithoutAnalysisIT_lucene">
        <class>org.hibernate.search.documentation.gettingstarted.withhsearch.withoutanalysis.Author</class>
        <class>org.hibernate.search.documentation.gettingstarted.withhsearch.withoutanalysis.Book</class>
        <exclude-unlisted-classes />
        <properties>
            <!-- tag::gettingstarted-configuration-orm_lucene[] -->
            <property name="hibernate.search.backends.myBackend.type"
                      value="lucene"/> <!--1-->
            <!--
            <property name="hibernate.search.backends.myBackend.directory.root"
                      value="some/filesystem/path"/>
             --> <!--2-->
            <property name="hibernate.search.default_backend"
                      value="myBackend"/> <!--3-->
            <!-- end::gettingstarted-configuration-orm_lucene[] -->

            <!--
                Not to be included in the documentation:
                this configuration is only relevant in our own testing infrastructure.
                WARNING: if you update the property name below,
                take care to also update the name of the commented property just above.
             -->
            <property name="hibernate.search.backends.myBackend.directory.root"
                      value="${project.build.directory}/test-indexes/gettingstarted/withoutanalysis/"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="GettingStartedWithoutAnalysisIT_elasticsearch">
        <class>org.hibernate.search.documentation.gettingstarted.withhsearch.withoutanalysis.Author</class>
        <class>org.hibernate.search.documentation.gettingstarted.withhsearch.withoutanalysis.Book</class>
        <exclude-unlisted-classes />
        <properties>
            <!-- tag::gettingstarted-configuration-orm_elasticsearch[] -->
            <property name="hibernate.search.backends.myBackend.type"
                      value="elasticsearch" /> <!--1-->
            <!--
            <property name="hibernate.search.backends.myBackend.hosts"
                      value="elasticsearch.mycompany.com"/>
            <property name="hibernate.search.backends.myBackend.protocol"
                      value="https"/>
            <property name="hibernate.search.backends.myBackend.username"
                      value="ironman"/>
            <property name="hibernate.search.backends.myBackend.password"
                      value="j@rV1s"/>
             --> <!--2-->
            <property name="hibernate.search.default_backend"
                      value="myBackend"/> <!--3-->
            <!-- end::gettingstarted-configuration-orm_elasticsearch[] -->

            <!--
                Not to be included in the documentation:
                this configuration is only relevant in our own testing infrastructure.
                WARNING: if you update the property names below,
                take care to also update the name of the commented properties just above.
             -->
            <property name="hibernate.search.backends.myBackend.hosts"
                      value="${test.elasticsearch.connection.hosts}"/>
            <property name="hibernate.search.backends.myBackend.protocol"
                      value="${test.elasticsearch.connection.protocol}"/>
            <property name="hibernate.search.backends.myBackend.username"
                      value="${test.elasticsearch.connection.username}"/>
            <property name="hibernate.search.backends.myBackend.password"
                      value="${test.elasticsearch.connection.password}"/>
            <property name="hibernate.search.backends.myBackend.aws.signing.enabled"
                      value="${test.elasticsearch.connection.aws.signing.enabled}"/>
            <property name="hibernate.search.backends.myBackend.aws.signing.access_key"
                      value="${test.elasticsearch.connection.aws.signing.access_key}"/>
            <property name="hibernate.search.backends.myBackend.aws.signing.secret_key"
                      value="${test.elasticsearch.connection.aws.signing.secret_key}"/>
            <property name="hibernate.search.backends.myBackend.aws.signing.region"
                      value="${test.elasticsearch.connection.aws.signing.region}"/>
            <property name="hibernate.search.backends.myBackend.index_defaults.lifecycle.strategy"
                      value="drop-and-create-and-drop"/>
            <!-- Make this test work even if there is only a single node in the cluster -->
            <property name="hibernate.search.backends.myBackend.index_defaults.lifecycle.minimal_required_status"
                      value="yellow"/>
            <property name="hibernate.search.automatic_indexing.synchronization.strategy"
                      value="searchable"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="GettingStartedWithAnalysisIT_lucene">
        <class>org.hibernate.search.documentation.gettingstarted.withhsearch.withanalysis.Author</class>
        <class>org.hibernate.search.documentation.gettingstarted.withhsearch.withanalysis.Book</class>
        <exclude-unlisted-classes />
        <properties>
            <property name="hibernate.search.backends.myBackend.type"
                      value="lucene"/>
            <!-- tag::gettingstarted-configuration-orm_lucene-analysis[] -->
            <property name="hibernate.search.backends.myBackend.analysis.configurer"
                      value="org.hibernate.search.documentation.gettingstarted.withhsearch.withanalysis.MyLuceneAnalysisConfigurer"/> <!--6-->
            <!-- end::gettingstarted-configuration-orm_lucene-analysis[] -->
            <property name="hibernate.search.default_backend"
                      value="myBackend"/>

            <!--
                Not to be included in the documentation:
                this configuration is only relevant in our own testing infrastructure.
                WARNING: if you update the property name below,
                take care to also update the name of the commented property just above.
             -->
            <property name="hibernate.search.backends.myBackend.directory.root"
                      value="${project.build.directory}/test-indexes/gettingstarted/withanalysis/"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="GettingStartedWithAnalysisIT_elasticsearch">
        <class>org.hibernate.search.documentation.gettingstarted.withhsearch.withanalysis.Author</class>
        <class>org.hibernate.search.documentation.gettingstarted.withhsearch.withanalysis.Book</class>
        <exclude-unlisted-classes />
        <properties>
            <property name="hibernate.search.backends.myBackend.type"
                      value="elasticsearch" />
            <!-- tag::gettingstarted-configuration-orm_elasticsearch-analysis[] -->
            <property name="hibernate.search.backends.myBackend.analysis.configurer"
                      value="org.hibernate.search.documentation.gettingstarted.withhsearch.withanalysis.MyElasticsearchAnalysisConfigurer"/> <!--7-->
            <!-- end::gettingstarted-configuration-orm_elasticsearch-analysis[] -->
            <property name="hibernate.search.default_backend"
                      value="myBackend"/>

            <!--
                Not to be included in the documentation:
                this configuration is only relevant in our own testing infrastructure.
                WARNING: if you update the property names below,
                take care to also update the name of the commented properties just above.
             -->
            <property name="hibernate.search.backends.myBackend.hosts"
                      value="${test.elasticsearch.connection.hosts}"/>
            <property name="hibernate.search.backends.myBackend.protocol"
                      value="${test.elasticsearch.connection.protocol}"/>
            <property name="hibernate.search.backends.myBackend.username"
                      value="${test.elasticsearch.connection.username}"/>
            <property name="hibernate.search.backends.myBackend.password"
                      value="${test.elasticsearch.connection.password}"/>
            <property name="hibernate.search.backends.myBackend.aws.signing.enabled"
                      value="${test.elasticsearch.connection.aws.signing.enabled}"/>
            <property name="hibernate.search.backends.myBackend.aws.signing.access_key"
                      value="${test.elasticsearch.connection.aws.signing.access_key}"/>
            <property name="hibernate.search.backends.myBackend.aws.signing.secret_key"
                      value="${test.elasticsearch.connection.aws.signing.secret_key}"/>
            <property name="hibernate.search.backends.myBackend.aws.signing.region"
                      value="${test.elasticsearch.connection.aws.signing.region}"/>
            <property name="hibernate.search.backends.myBackend.index_defaults.lifecycle.strategy"
                      value="drop-and-create-and-drop"/>
            <!-- Make this test work even if there is only a single node in the cluster -->
            <property name="hibernate.search.backends.myBackend.index_defaults.lifecycle.minimal_required_status"
                      value="yellow"/>
            <property name="hibernate.search.automatic_indexing.synchronization.strategy"
                      value="searchable"/>
        </properties>
    </persistence-unit>
</persistence>
