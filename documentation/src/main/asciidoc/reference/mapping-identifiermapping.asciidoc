[[mapping-identifiermapping]]
= [[mapper-orm-identifiermapping]] [[id-annotation]] Mapping the document identifier

[[mapping-identifiermapping-basics]]
== [[mapper-orm-identifiermapping-basics]] [[example-document-id-default-orm]] Basics

Index documents, much like entities, need to be assigned an identifier
so that Hibernate Search can handle updates and deletion.

When indexing Hibernate ORM entities,
the entity identifier is used as a document identifier by default.

Provided the entity identifier has a <<mapping-identifiermapping-supported-types,supported type>>,
identifier mapping will work out of the box and no explicit mapping is necessary.

[[mapping-identifiermapping-explicit]]
== [[mapper-orm-identifiermapping-explicit]] [[_explicit_identifier_mapping]] Explicit identifier mapping

Explicit identifier mapping is required in the following cases:

* The document identifier is not the entity identifier.
* OR the entity identifier has a type that is not supported by default.
This is the case of composite identifiers, in particular.

To select a property to map to the document identifier,
just apply the `@DocumentId` annotation to that property:

[[example-document-id-explicit]]
.Mapping a property to the document identifier explicitly with `@DocumentId`
====
[source, JAVA, indent=0]
----
include::{sourcedir}/org/hibernate/search/documentation/mapper/orm/identifiermapping/naturalid/Book.java[tags=include;!getters-setters]
----
====

When the property type is not supported,
it is also necessary to <<bridge-identifierbridge,implement a custom identifier bridge>>,
then refer to it in the `@DocumentId` annotation:

.Mapping a property with unsupported type to the document identifier with `@DocumentId`
====
[source, JAVA, indent=0]
----
include::{sourcedir}/org/hibernate/search/documentation/mapper/orm/identifiermapping/customtype/Book.java[tags=include;!getters-setters]
----
====

[[mapping-identifiermapping-supported-types]]
== [[mapper-orm-identifiermapping-supported-types]] [[_supported_identifier_types]] Supported identifier property types

Below is a table listing all types with built-in identifier bridges,
i.e. property types that are supported out of the box
when mapping a property to a document identifier.

The table also explains the value assigned to the document identifier,
i.e. the value passed to the underlying backend.

[cols="m,1,1",options="header"]
.Property types with built-in identifier bridges
|===
|Property type|Value of document identifiers|Limitations
|All enum types|`name()` as a `java.lang.String`|-
|java.lang.String|Unchanged|-
|java.lang.Character, char|A single-character `java.lang.String`|-
|java.lang.Byte, byte|`toString()`|-
|java.lang.Short, short|`toString()`|-
|java.lang.Integer, int|`toString()`|-
|java.lang.Long, long|`toString()`|-
|java.lang.Double, double|`toString()`|-
|java.lang.Float, float|`toString()`|-
|java.lang.Boolean, boolean|`toString()`|-
|java.math.BigDecimal|`toString()`|-
|java.math.BigInteger|`toString()`|-
|java.net.URI|`toString()`|-
|java.net.URL|`toExternalForm()`|-
|java.time.Instant
|Formatted according to `DateTimeFormatter.ISO_INSTANT`.
|-
|java.time.LocalDate
|Formatted according to `DateTimeFormatter.ISO_LOCAL_DATE`.
|-
|java.time.LocalTime
|Formatted according to `DateTimeFormatter.ISO_LOCAL_TIME`.
|-
|java.time.LocalDateTime
|Formatted according to `DateTimeFormatter.ISO_LOCAL_DATE_TIME`.
|-
|java.time.OffsetDateTime
|Formatted according to `DateTimeFormatter.ISO_OFFSET_DATE_TIME`.
|-
|java.time.OffsetTime
|Formatted according to `DateTimeFormatter.ISO_OFFSET_TIME`.
|-
|java.time.ZonedDateTime
|Formatted according to `DateTimeFormatter.ISO_ZONED_DATE_TIME`.
|-
|java.time.ZoneId|`getId()`|-
|java.time.ZoneOffset|`getId()`|-
|java.time.Period
|Formatted according to the https://en.wikipedia.org/wiki/ISO_8601#Durations[ISO 8601 format for a duration]
(e.g. `P1900Y12M21D`).
|-
|java.time.Duration
|Formatted according to the https://en.wikipedia.org/wiki/ISO_8601#Durations[ISO 8601 format for a duration],
using seconds and nanoseconds only (e.g. `PT1.000000123S`).
|-
|java.time.Year
|Formatted according to the https://en.wikipedia.org/wiki/ISO_8601#Years[ISO 8601 format for a Year]
(e.g. `2017` for 2017 AD, `0000` for 1 BC, `-10000` for 10,001 BC, etc.).
|-
|java.time.YearMonth
|Formatted according to the https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates[ISO 8601 format for a Year-Month]
(e.g. `2017-11` for November 2017).
|-
|java.time.MonthDay
|Formatted according to the https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates[ISO 8601 format for a Month-Day]
(e.g. `--11-06` for November 6th).
|-
|java.util.UUID|`toString()` as a `java.lang.String`|-
|java.util.Calendar
|A `java.time.ZonedDateTime` representing the same date/time and timezone,
formatted according to `DateTimeFormatter.ISO_ZONED_DATE_TIME`.
|See <<mapping-legacy-date-time-apis>>.
|java.util.Date
|`Instant.ofEpochMilli(long)` as a `java.time.Instant`
formatted according to `DateTimeFormatter.ISO_INSTANT`.
|See <<mapping-legacy-date-time-apis>>.
|java.sql.Timestamp
|`Instant.ofEpochMilli(long)` as a `java.time.Instant`
formatted according to `DateTimeFormatter.ISO_INSTANT`.
|See <<mapping-legacy-date-time-apis>>.
|java.sql.Date
|`Instant.ofEpochMilli(long)` as a `java.time.Instant`
formatted according to `DateTimeFormatter.ISO_INSTANT`.
|See <<mapping-legacy-date-time-apis>>.
|java.sql.Time
|`Instant.ofEpochMilli(long)` as a `java.time.Instant`,
formatted according to `DateTimeFormatter.ISO_INSTANT`.
|See <<mapping-legacy-date-time-apis>>.
|<<mapping-geopoint-basics,GeoPoint>> and subtypes
|Latitude as double and longitude as double, separated by a comma
(e.g. `41.8919, 12.51133`).
|-
|===

[[mapping-identifiermapping-programmatic]]
== [[mapper-orm-identifiermapping-programmatic]] Programmatic mapping

You can map the document identifier through the <<mapping-programmatic,programmatic mapping>> too.
Behavior and options are identical to annotation-based mapping.

.Mapping a property to the document identifier explicitly with `.documentId()`
====
[source, JAVA, indent=0]
----
include::{sourcedir}/org/hibernate/search/documentation/mapper/orm/identifiermapping/naturalid/IdentifierMappingNaturalIdIT.java[tags=programmatic]
----
====
