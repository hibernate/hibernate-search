[[troubleshooting]]
= Troubleshooting

[[troubleshooting-under-the-hood]]
== Finding out what is executed under the hood

For search queries, you can get a human-readable representation of a <<search-dsl-query-object,`SearchQuery` object>>
by calling `toString()` or `queryString()`.
Alternatively, rely on the logs:
<<troubleshooting-logging-query,`org.hibernate.search.query`>> will log every query at the `DEBUG` level
before it is executed.

[[troubleshooting-logging]]
== Loggers

Here are a few loggers that can be useful when debugging an application that uses Hibernate Search:

[[troubleshooting-logging-query]]`org.hibernate.search.query`::
Available for all backends.
+
Logs every single search query at the `DEBUG` level, before its execution.

[[troubleshooting-faq]]
== Frequently asked questions

[[troubleshooting-faq-search-matches]]
=== Unexpected or missing documents in search hits
// Legacy anchors backward compatibility
[[search-dsl-query-debugging-matches]]

When some documents unexpectedly match or don't match a query,
you will need information about the exact query being executed,
and about the index content.

To find out what the query being executed looks like exactly,
see <<troubleshooting-under-the-hood>>.

To inspect the content of the index:

* With the Elasticsearch backend, run simpler queries using either Hibernate Search or the REST APIs directly.
* With the Lucene backend, run simpler queries using Hibernate Search or
https://medium.com/@mocobeta/luke-become-an-apache-lucene-module-as-of-lucene-8-1-7d139c998b2[use the Luke tool]
distributed as part of the https://lucene.apache.org/core/downloads.html[Lucene binary packages].

[[troubleshooting-faq-search-score]]
=== Unsatisfying order of search hits when sorting by score
// Legacy anchors backward compatibility
[[_understanding_results]]
[[search-dsl-query-debugging-score]]

When sorting by score, if the documents don't appear in the order you expect,
it means some documents have a score that is higher or lower than what you want.

The best way to gain insight into these scores
is to just ask the backend to explain how the score was computed.
The returned explanation will include a human-readable description of
how the score of a specific document was computed.

include::components/explanation-warning.asciidoc[]

There are two ways to retrieve explanations:

* If you are interested in a particular entity and know its identifier: use the `explain(...)` method on the query.
See <<search-dsl-query-explain>>.
* If you just want an explanation for all the top hits: use an `explanation` projection.
See <<search-dsl-projection-extensions-lucene-explanation,here for Lucene>>
and <<search-dsl-projection-extensions-elasticsearch-explanation,here for Elasticsearch>>.

[[troubleshooting-faq-search-time]]
=== Search query execution takes too long

When the execution of a search query is too long,
you may need more information about how long it took exactly,
and what was executed exactly.

To find out how long a query execution took,
use the <<search-dsl-query-took-timedout,`took()` method>> on the search result.

To find out what the query being executed looks like exactly,
see <<troubleshooting-under-the-hood>>.