[[mapper-orm-identifiermapping]]
= Mapping the document identifier
// Search 5 anchors backward compatibility
[[id-annotation]]

[[mapper-orm-identifiermapping-basics]]
== Basics
// Search 5 anchors backward compatibility
[[example-document-id-default-orm]]

Index documents, much like entities, need to be assigned an identifier
so that Hibernate Search can handle updates and deletion.

When indexing Hibernate ORM entities,
the entity identifier is used as a document identifier by default.

Provided the entity identifier has a <<mapper-orm-identifiermapping-supported-types,supported type>>,
identifier mapping will work out of the box and no explicit mapping is necessary.

== Explicit identifier mapping

Explicit identifier mapping is required in the following cases:

* The document identifier is not the entity identifier.
* OR the entity identifier has a type that is not supported by default.
This is the case of composite identifiers, in particular.

To select a property to map to the document identifier,
just apply the `@DocumentId` annotation to that property:

[[example-document-id-explicit]]
.Mapping a property to the document identifier explicitly with `@DocumentId`
====
[source, JAVA, indent=0]
----
include::{sourcedir}/org/hibernate/search/documentation/mapper/orm/identifiermapping/naturalid/Book.java[tags=include;!getters-setters]
----
====

When the property type is not supported,
it is also necessary to <<mapper-orm-bridge-identifierbridge,implement a custom identifier bridge>>,
then refer to it in the `@DocumentId` annotation:

.Mapping a property with unsupported type to the document identifier with `@DocumentId`
====
[source, JAVA, indent=0]
----
include::{sourcedir}/org/hibernate/search/documentation/mapper/orm/identifiermapping/customtype/Book.java[tags=include;!getters-setters]
----
====

[[mapper-orm-identifiermapping-supported-types]]
== Supported identifier property types
// Search 5 anchors backward compatibility
[[_supported_identifier_types]]

Below is a table listing all types with built-in identifier bridges,
i.e. property types that are supported out of the box
when mapping a property to a document identifier.

The table also explains the value assigned to the document identifier,
i.e. the value passed to the underlying backend.

[cols="l,1",options="header"]
.Property types with built-in identifier bridges
|====
|Property type|Value of document identifiers
|java.lang.String|Unchanged
|java.lang.Short, short|`toString()`
|java.lang.Integer, int|`toString()`
|java.lang.Long, long|`toString()`
|java.math.BigInteger|`toString()`
|All enum types|`name()`
|java.util.UUID|`toString()`
|====
