<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.search</groupId>
        <artifactId>hibernate-search-parent</artifactId>
        <version>6.0.4-SNAPSHOT</version>
        <relativePath>../../..</relativePath>
    </parent>
    <artifactId>hibernate-search-util-internal-test</artifactId>

    <name>Hibernate Search Utils - Internal - Test</name>
    <description>Hibernate Search common test utilities</description>

    <properties>
        <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
        <!--
             Skip javadoc generation for this module: we don't want to publish it.
             Note this shouldn't be necessary because we don't even use the maven-javadoc-plugin
             in this module.
             However, the maven-javadoc-plugin sometimes invokes the javadoc goal on this module explicitly
             from other (published) modules; probably because it tries to generate the javadoc of dependencies,
             even test dependencies.
             Whatever the reason, this triggers errors, so we better just disable the plugin explicitly.
         -->
        <maven.javadoc.skip>true</maven.javadoc.skip>

        <!--
            Consider all sources as tests during Sonar analysis.
            This is important because some analysis rules do not apply to test code.
         -->
        <sonar.sources>${rootProject.emptySubdirectory}</sonar.sources>
        <sonar.tests>${project.basedir}/src</sonar.tests>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging-annotations</artifactId>
        </dependency>

        <!-- Work around Surefire clearing the interrupt status when forwarding stdout/stderr -->
        <dependency>
            <groupId>org.hibernate.search</groupId>
            <artifactId>hibernate-search-build-surefire-extension</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <!-- Work around dependency divergence reported by the Enforcer plugin.
                     There really is divergence, but we really don't care as it's already there,
                     caused by the Surefire booter itself. -->
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>

