<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~  Copyright (c) 2010, Red Hat, Inc. and/or its affiliates or third-party contributors as
  ~  indicated by the @author tags or express copyright attribution
  ~  statements applied by the authors.  All third-party contributions are
  ~  distributed under license by Red Hat, Inc.
  ~
  ~  This copyrighted material is made available to anyone wishing to use, modify,
  ~  copy, or redistribute it subject to the terms and conditions of the GNU
  ~  Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~  This program is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~  for more details.
  ~
  ~  You should have received a copy of the GNU Lesser General Public License
  ~  along with this distribution; if not, write to:
  ~  Free Software Foundation, Inc.
  ~  51 Franklin Street, Fifth Floor
  ~  Boston, MA  02110-1301  USA
  -->
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../hsearch.ent">
%BOOK_ENTITIES;
]>
<chapter id="search-optimize">

  <title>Index Optimization</title>

  <para>From time to time, the Lucene index needs to be optimized. The process
  is essentially a defragmentation. Until an optimization is triggered Lucene
  only marks deleted documents as such, no physical deletions are applied.
  During the optimization process the deletions will be applied which also
  effects the number of files in the Lucene Directory.</para>

  <para>Optimizing the Lucene index speeds up searches but has no effect on
  the indexation (update) performance. During an optimization, searches can be
  performed, but will most likely be slowed down. All index updates will be
  stopped. It is recommended to schedule optimization:</para>

  <itemizedlist>
    <listitem>
      <para>on an idle system or when the searches are less frequent</para>
    </listitem>

    <listitem>
      <para>after a lot of index modifications</para>
    </listitem>
  </itemizedlist>
  
  <para>When using a <classname>MassIndexer</classname> (see
  <xref linkend="search-batchindex-massindexer"/>) it will optimize involved
  indexes by default at the start and at the end of processing; you can change
  this behavior by using respectively
  <classname>MassIndexer</classname>.<methodname>optimizeAfterPurge</methodname>
  and <classname>MassIndexer</classname>.<methodname>optimizeOnFinish</methodname>.</para>

  <section>
    <title>Automatic optimization</title>

    <para>Hibernate Search can automatically optimize an index after:</para>

    <itemizedlist>
      <listitem>
        <para>a certain amount of operations (insertion, deletion)</para>
      </listitem>

      <listitem>
        <para>or a certain amount of transactions </para>
      </listitem>
    </itemizedlist>

    <para>The configuration for automatic index optimization can be defined on
    a global level or per index:</para>

    <example>
      <title>Defining automatic optimization parameters</title>

      <programlisting>hibernate.search.default.optimizer.operation_limit.max = 1000
hibernate.search.default.optimizer.transaction_limit.max = 100
hibernate.search.Animal.optimizer.transaction_limit.max = 50</programlisting>
    </example>

    <para>An optimization will be triggered to the <literal>Animal</literal>
    index as soon as either:</para>

    <itemizedlist>
      <listitem>
        <para>the number of additions and deletions reaches 1000</para>
      </listitem>

      <listitem>
        <para>the number of transactions reaches 50
        (<constant>hibernate.search.Animal.optimizer.transaction_limit.max</constant>
        having priority over
        <constant>hibernate.search.default.optimizer.transaction_limit.max</constant>)</para>
      </listitem>
    </itemizedlist>

    <para>If none of these parameters are defined, no optimization is
    processed automatically.</para>
  </section>

  <section>
    <title>Manual optimization</title>

    <para>You can programmatically optimize (defragment) a Lucene index from
    Hibernate Search through the <classname>SearchFactory</classname>:</para>

    <example>
      <title>Programmatic index optimization</title>

      <programlisting>FullTextSession fullTextSession = Search.getFullTextSession(regularSession);
SearchFactory searchFactory = fullTextSession.getSearchFactory();

searchFactory.optimize(Order.class);
// or
searchFactory.optimize();</programlisting>
    </example>

    <para>The first example optimizes the Lucene index holding
    <classname>Order</classname>s; the second, optimizes all indexes.</para>

    <note>
      <para><literal>searchFactory.optimize()</literal> has no effect on a JMS
      backend. You must apply the optimize operation on the Master
      node.</para>
    </note>
  </section>

  <section>
    <title>Adjusting optimization</title>

    <para>Apache Lucene has a few parameters to influence how optimization is
    performed. Hibernate Search exposes those parameters.</para>

    <para>Further index optimization parameters include: <itemizedlist>
        <listitem>
          <literal>hibernate.search.[default|&lt;indexname&gt;].indexwriter.max_buffered_docs</literal>
        </listitem>

        <listitem>
          <literal>hibernate.search.[default|&lt;indexname&gt;].indexwriter.max_merge_docs</literal>
        </listitem>

        <listitem>
          <literal>hibernate.search.[default|&lt;indexname&gt;].indexwriter.merge_factor</literal>
        </listitem>

        <listitem>
          <literal>hibernate.search.[default|&lt;indexname&gt;].indexwriter.ram_buffer_size</literal>
        </listitem>

        <listitem>
          <literal>hibernate.search.[default|&lt;indexname&gt;].indexwriter.term_index_interval</literal>
        </listitem>
      </itemizedlist> See <xref linkend="lucene-indexing-performance" /> for
    more details.</para>
  </section>
</chapter>
