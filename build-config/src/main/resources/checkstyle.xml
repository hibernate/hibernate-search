<?xml version="1.0"?>
<!--
 ~ Hibernate, Relational Persistence for Idiomatic Java
 ~
 ~ JBoss, Home of Professional Open Source
 ~ Copyright 2013 Red Hat Inc. and/or its affiliates and other contributors
 ~ as indicated by the @authors tag. All rights reserved.
 ~ See the copyright.txt in the distribution for a
 ~ full listing of individual contributors.
 ~
 ~ This copyrighted material is made available to anyone wishing to use,
 ~ modify, copy, or redistribute it subject to the terms and conditions
 ~ of the GNU Lesser General Public License, v. 2.1.
 ~ This program is distributed in the hope that it will be useful, but WITHOUT A
 ~ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 ~ PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 ~ You should have received a copy of the GNU Lesser General Public License,
 ~ v.2.1 along with this distribution; if not, write to the Free Software
 ~ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 ~ MA  02110-1301, USA.
  -->
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<module name="Checker">

    <module name="TreeWalker">
        <property name="cacheFile" value="${checkstyle.cache.file}" />

        <module name="Regexp">
            <property name="format"
                value="\A(/\*\n \* Hibernate, Relational Persistence for Idiomatic Java\n \*\n \* Copyright \(c\) \d{4}(-\d{4})?, Red Hat(,)? Inc. (and/or its affiliates )?or third-party contributors as\n \* indicated by the @author tags or express copyright attribution\n \* statements applied by the authors.  All third-party contributions are\n \* distributed under license by Red Hat(,)? Inc.\n \*\n \* This copyrighted material is made available to anyone wishing to use, modify,\n \* copy, or redistribute it subject to the terms and conditions of the GNU\n \* Lesser General Public License, as published by the Free Software Foundation.\n \*\n \* This program is distributed in the hope that it will be useful,\n \* but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n \* or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n \* for more details.\n \*\n \* You should have received a copy of the GNU Lesser General Public License\n \* along with this distribution; if not, write to:\n \* Free Software Foundation, Inc.\n \* 51 Franklin Street, Fifth Floor\n \* Boston, MA  02110-1301  USA\n \*/)|(/\* ?\n \* Hibernate, Relational Persistence for Idiomatic Java\n \* ?\n \* JBoss, Home of Professional Open Source\n \* Copyright \d{4} Red Hat Inc. and/or its affiliates and other contributors\n \* as indicated by the @authors tag. All rights reserved.\n \* See the copyright.txt in the distribution for a\n \* full listing of individual contributors.\n \*\n \* This copyrighted material is made available to anyone wishing to use,\n \* modify, copy, or redistribute it subject to the terms and conditions\n \* of the GNU Lesser General Public License, v. 2.1.\n \* This program is distributed in the hope that it will be useful, but WITHOUT A\n \* WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n \* PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n \* You should have received a copy of the GNU Lesser General Public License,\n \* v.2.1 along with this distribution; if not, write to the Free Software\n \* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n \* MA  02110-1301, USA.\n \*/)|(/\*\n \* Hibernate, Relational Persistence for Idiomatic Java\n \*\n \* JBoss, Home of Professional Open Source\n \* Copyright \d{4}(-\d{4})? Red Hat Inc. and/or its affiliates and other contributors\n \* as indicated by the @authors tag. All rights reserved.\n \* See the copyright.txt in the distribution for a\n \* full listing of individual contributors.\n \*\n \* This copyrighted material is made available to anyone wishing to use,\n \* modify, copy, or redistribute it subject to the terms and conditions\n \* of the GNU Lesser General Public License, v. 2.1.\n \* This program is distributed in the hope that it will be useful, but WITHOUT A\n \* WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n \* PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n \* You should have received a copy of the GNU Lesser General Public License,\n \* v.2.1 along with this distribution; if not, write to the Free Software\n \* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n \* MA  02110-1301, USA.\n \*/)|(/\* ?\n \* JBoss, Home of Professional Open Source\n \* Copyright 2011 Red Hat Inc. and/or its affiliates and other contributors\n \* as indicated by the @authors tag. All rights reserved.\n \* See the copyright.txt in the distribution for a\n \* full listing of individual contributors.\n \*\n \* This copyrighted material is made available to anyone wishing to use,\n \* modify, copy, or redistribute it subject to the terms and conditions\n \* of the GNU Lesser General Public License, v. 2.1.\n \* This program is distributed in the hope that it will be useful, but WITHOUT A\n \* WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n \* PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n \* You should have received a copy of the GNU Lesser General Public License,\n \* v.2.1 along with this distribution; if not, write to the Free Software\n \* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n \* MA  02110-1301, USA.\n \*/)|(\/\*\n \* JBoss, Home of Professional Open Source\n \* Copyright 2008, Red Hat Middleware LLC, and individual contributors\n \* as indicated by the @author tags.\n \* See the copyright.txt in the distribution for a\n \* full listing of individual contributors.\n \* This copyrighted material is made available to anyone wishing to use,\n \* modify, copy, or redistribute it subject to the terms and conditions\n \* of the GNU Lesser General Public License, v. 2.1.\n \* This program is distributed in the hope that it will be useful, but WITHOUT A\n \* WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n \* PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n \* You should have received a copy of the GNU Lesser General Public License,\n \* v.2.1 along with this distribution; if not, write to the Free Software\n \* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n \* MA  02110-1301, USA.\n \*\n \* \(C\) 2008,\n \* @author JBoss Inc.\n \*/)" />
            <property name="message" value="Correct header not found" />
        </module>

        <!-- Use tabs -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\t* +\t*\S" />
            <property name="message" value="Line has leading space characters; indentation should be performed with tabs only." />
            <property name="ignoreComments" value="true" />
        </module>

        <!-- Check parentheses padding -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^\t+(if|for|while|catch)([^ ])\(" />
            <property name="message" value="Left parentheses should be preceeded by 1 whitespace" />
            <property name="ignoreComments" value="true" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="^\t+(if|for|while) \( .+[^ ]\) \{$" />
            <property name="message" value="Right parentheses should be preceeded by 1 white space" />
            <property name="ignoreComments" value="true" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="^\t+(if|for|while) \([^ $]" />
            <property name="message" value="Left parentheses should be followed by 1 whitespace" />
            <property name="ignoreComments" value="true" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="\)([^ ])\{$" />
            <property name="message" value="Right parentheses should be followed by 1 white space" />
            <property name="ignoreComments" value="true" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="catch \([^\w]" />
            <property name="message" value="'catch' clause does not require white space after left parentheses" />
            <property name="ignoreComments" value="true" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="catch \(.*\s\) \{" />
            <property name="message" value="'catch' clause does not require white space before right parentheses" />
            <property name="ignoreComments" value="true" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="\)\s+;$" />
            <property name="message" value="Unecessary whitespace after parentheses" />
            <property name="ignoreComments" value="true" />
        </module>

       <!-- Checks for imports -->
        <module name="AvoidStarImport" />
        <module name="RedundantImport" />
        <module name="UnusedImports" />

        <!-- Checks for common coding problems -->
        <module name="EqualsHashCode" />
        <module name="IllegalInstantiation" />

        <!-- Miscellaneous other checks. -->
        <module name="ModifierOrder" />
        <module name="GenericWhitespace" />
        <module name="PackageAnnotation" />
        <module name="CovariantEquals" />
        <module name="ModifiedControlVariable" />
        <module name="NeedBraces" />
        <module name="OneStatementPerLine" />
        <module name="EmptyStatement" />
        <module name="DefaultComesLast" />
        <module name="WhitespaceAround" />
        <module name="TypecastParenPad" />
        <module name="RedundantThrows">
            <!-- Needed to workaround a CheckStyle bug: can't find exception types which are
            a dependency which is only available in scope test (to check style of our tests) -->
            <property name="suppressLoadErrors" value="true"/>
        </module>
        <module name="HideUtilityClassConstructor"/>
        <module name="MutableException"/>
        <module name="CovariantEquals" />
        <module name="EqualsAvoidNull" />

        <!-- <module name="DeclarationOrder" /> -->
        <module name="RedundantModifier"/>
        <module name="MissingOverride"/>

        <module name="MethodParamPad">
            <property name="option" value="nospace" />
            <property name="allowLineBreaks" value="false" />
        </module>

        <!-- Checks for blocks. You know, those {}'s -->
        <module name="LeftCurly">
            <property name="option" value="eol" />
        </module>
        <module name="RightCurly">
            <property name="option" value="alone" />
        </module>

        <module name="ParenPad">
            <property name="tokens" value="CTOR_CALL, METHOD_CALL, SUPER_CTOR_CALL" />
            <property name="option" value="space" />
        </module>

        <module name="org.hibernate.checkstyle.checks.regexp.DoubleSpaces">
            <property name="ignoreComments" value="true" />
            <property name="ignoreStrings" value="true" />
        </module>

        <!-- WARN, ERROR and INFO Logging severity levels should be used exclusively via the methods which allow i18 -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="log\.((error)|(warn)|(info))\(" />
            <!-- The last sentence of the message is a keyword to trigger exclusion: see ExcludeTestPackages -->
            <property name="message" value="'log.error()', warn() and info() should never be used. [not required for tests]" />
            <property name="ignoreComments" value="true" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="System\.(out)|(err)\.print(ln)?\(" />
            <!-- The last sentence of the message is a keyword to trigger exclusion: see ExcludeTestPackages -->
            <property name="message" value="Not allowed to print to System.out: if you're damn sure you want it, disable Checkstyle on this line. [not required for tests]" />
            <property name="ignoreComments" value="true" />
        </module>

        <!-- Nobody should be using StringBuffer anymore -->
        <module name="RegexpSinglelineJava">
            <property name="format" value=" StringBuffer" />
            <!-- The last sentence of the message is a keyword to trigger exclusion: see ExcludeTestPackages -->
            <property name="message" value="Nobody should be using StringBuffer anymore" />
        </module>

        <!-- Required to get SuppressionCommentFilter to work -->
        <module name="FileContentsHolder" />

        <!--  Avoid some import statements -->
        <module name="IllegalImport">
            <property name="illegalPkgs" value="java.awt, sun, org.slf4j"/>
        </module>
        <module name="org.hibernate.checkstyle.checks.regexp.IllegalImport">
            <property name="illegalClassnames" value="org.jgroups.util.Util.assertTrue, org.jgroups.util.Util.assertFalse, org.jgroups.util.Util.assertNotNull, junit.framework.Assert" />
            <property name="message" value="Stop using the Util class from JGroups for assertions which should use JUnit!" />
        </module>
        <module name="org.hibernate.checkstyle.checks.regexp.IllegalImport">
            <property name="illegalClassnames" value="org.hibernate.annotations.common.util.StringHelper" />
            <property name="message" value="Stop using the StringHelper from commons-annotations: use org.hibernate.search.util.StringHelper." />
        </module>
        <module name="org.hibernate.checkstyle.checks.regexp.IllegalImport">
            <property name="illegalClassnames" value="org.hibernate.annotations.common.AssertionFailure" />
            <property name="message" value="Stop using the AssertionFailure from commons-annotations." />
        </module>

    </module>

    <module name="org.hibernate.checkstyle.filters.ExcludeTestPackages" />

    <!-- We are not using NewLineAtEndOfFile because the new line chars change
        on different operating systems and that rule allows only one type. This rule
        is not actually checking for new lines, but it will work if we check that
        there are not white spaces at the end of a line with another rule. -->
    <module name="RegexpMultiline">
        <property name="format" value="\S\z" />
        <property name="message" value="Missing new line at the end of file" />
    </module>

    <module name="RegexpMultiline">
        <property name="format" value="\S\s\s\z" />
        <property name="message" value="Only one new line is allowed at the end of a file" />
    </module>

    <module name="RegexpSingleline">
        <property name="format" value="\s+$" />
        <property name="message" value="White spaces at the end of line" />
    </module>

    <module name="SuppressionCommentFilter" />

</module>
