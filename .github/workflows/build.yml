# The main CI of Hibernate Search is https://ci.hibernate.org/job/hibernate-search/.
# However, Hibernate Search builds run on GitHub actions regularly
# to build on Windows
# and check that both the Linux and Windows workflows still work
# and can be used in GitHub forks.
# See https://docs.github.com/en/actions
# for more information about GitHub actions.

name: GitHub Actions Build

on:
  push:
    branches:
      # Pattern order matters: the last matching inclusion/exclusion wins
      - '**'
      - '!3.*'
      - '!4.*'
      - '!5.*'
      - '!6.*'
      - '!dependabot/**'
    tags:
      - '**'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      # Pattern order matters: the last matching inclusion/exclusion wins
      - '**'
      - '!3.*'
      - '!4.*'
      - '!5.*'
      - '!6.*'
      # Ignore dependabot PRs that are not just about build dependencies;
      # we'll reject such dependant PRs and send a PR ourselves.
      - '!dependabot/**'
      - 'dependabot/maven/build-dependencies-**'

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository != 'hibernate/hibernate-search' }}

defaults:
  run:
    shell: bash

env:
  MAVEN_ARGS: "-e -B --settings .github/mvn-settings.xml --fail-at-end"

jobs:
  build:
    name: ${{matrix.os.name}}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - {
            name: "Linux JDK 17",
            runs-on: 'ubuntu-latest',
            java: {
              version: 17
            },
            maven: {
              args: ''
            }
          }
          # We can't start Linux containers on GitHub Actions' Windows VMs,
          # so we can't run Elasticsearch tests.
          # See https://github.com/actions/runner-images/issues/1143#issuecomment-972929995
          # For some reason docker-maven-plugin will error out with "All pipe instances are busy"
          # on GitHub Actions' Windows VMs (when using Bash?),
          # so we also explicitly disable docker-maven-plugin.
          # See https://github.com/fabric8io/docker-maven-plugin/issues/548#issuecomment-255477600
          - {
            name: "Windows JDK 17",
            runs-on: 'windows-latest',
            java: {
              version: 17
            },
            maven: {
              args: '-Dtest.elasticsearch.skip=true -Dtest.containers.run.skip=true'
            }
          }
    steps:
      - name: Support longpaths on Windows
        if: "startsWith(matrix.os.runs-on, 'windows')"
        run: git config --global core.longpaths true
      - uses: actions/checkout@v4
        with:
          # Fetch the whole history to make sure that gitflow incremental builder
          # can find the base commit.
          fetch-depth: 0
      - name: Set up Java ${{ matrix.os.java.version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.os.java.version }}
      # https://github.com/actions/cache/blob/main/examples.md#java---maven
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up Maven
        run: ./mvnw -v
      - name: Docker cleanup
        run: ./ci/docker-cleanup.sh
      - name: Building code and running unit tests and basic checks
        run: |
          ./mvnw $MAVEN_ARGS ${{ matrix.os.maven.args }} install \
          -Pjqassistant -Pdist -Pci-sources-check -DskipITs
      - name: Running integration tests in the default environment
        run: |
          ./mvnw $MAVEN_ARGS ${{ matrix.os.maven.args }} verify \
          -DskipSurefireTests -Pskip-checks -Pci-rebuild \
          ${{ github.event.pull_request.base.ref && format('-Dincremental -Dgib.referenceBranch=refs/remotes/origin/{0}', github.event.pull_request.base.ref) || '' }}
      - name: Docker cleanup
        if: always()
        run: ./ci/docker-cleanup.sh
      - name: Omit produced artifacts from build cache
        run: rm -r ~/.m2/repository/org/hibernate/search
      # Workaround for https://github.com/actions/upload-artifact/issues/240
      - name: List build reports to upload (if build failed)
        if: ${{ failure() || cancelled() }}
        # The weird syntax is because we're setting a multiline environment variable
        # See https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-of-a-multiline-string
        run: |
          {
            echo 'buildReportPaths<<EOF'
            find . -path '**/*-reports'
            echo EOF
          } >> "$GITHUB_ENV"
      - name: Upload build reports (if build failed)
        uses: actions/upload-artifact@v3
        if: ${{ failure() || cancelled() }}
        with:
          name: ${{ format('build-reports-{0}', matrix.os.name ) }}
          path: ${{ env.buildReportPaths }}
          retention-days: 7
