<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Hibernate Search, full-text search for your domain model
 ~
 ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later
 ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.search</groupId>
        <artifactId>hibernate-search-parent</artifactId>
        <version>7.0.0-SNAPSHOT</version>
        <relativePath>../..</relativePath>
    </parent>
    <artifactId>hibernate-search-build-config</artifactId>

    <name>Hibernate Search Build - Config</name>
    <description>Hibernate Search common build configuration files</description>

    <properties>
        <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
        <jqassistant.skip>true</jqassistant.skip>

        <!--
            This module generates the rules used in the Checkstyle and ForbiddenAPIs plugins,
            so obviously we cannot use those rules while building this module.
         -->
        <checkstyle.skip>true</checkstyle.skip>
        <forbiddenapis.skip>true</forbiddenapis.skip>
        <format.skip>true</format.skip>

        <tmpdir.dependencies-javadoc-packagelists>${project.build.directory}/dependencies-javadoc-packagelists</tmpdir.dependencies-javadoc-packagelists>
        <tmpdir.dependencies-to-parse>${project.build.directory}/dependencies-to-parse</tmpdir.dependencies-to-parse>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-build-bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.smallrye</groupId>
            <artifactId>jandex</artifactId>
        </dependency>
        <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${version.com.puppycrawl.tools.checkstyle}</version>
            <exclusions>
                <!-- Excluding com.sun:tools since it causes errors when importing this module into an IDE on Windows (HSEARCH-1374) -->
                <exclusion>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- See https://maven.apache.org/plugins/maven-dependency-plugin/examples/unpacking-artifacts.html -->
                    <execution>
                        <id>unpack-dependencies-javadoc-packagelists</id>
                        <phase>${javadoc.download.phase}</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <skip>${maven.javadoc.skip}</skip>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.hibernate.orm</groupId>
                                    <artifactId>hibernate-core</artifactId>
                                    <classifier>javadoc</classifier>
                                    <type>jar</type>
                                    <version>${version.org.hibernate.orm}</version>
                                    <outputDirectory>${tmpdir.dependencies-javadoc-packagelists}/hibernate-core</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.lucene</groupId>
                                    <artifactId>lucene-core</artifactId>
                                    <classifier>javadoc</classifier>
                                    <type>jar</type>
                                    <version>${version.org.apache.lucene}</version>
                                    <outputDirectory>${tmpdir.dependencies-javadoc-packagelists}/lucene-core</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.lucene</groupId>
                                    <artifactId>lucene-analysis-common</artifactId>
                                    <classifier>javadoc</classifier>
                                    <type>jar</type>
                                    <version>${version.org.apache.lucene}</version>
                                    <outputDirectory>${tmpdir.dependencies-javadoc-packagelists}/lucene-analyzers-common</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.lucene</groupId>
                                    <artifactId>lucene-queryparser</artifactId>
                                    <classifier>javadoc</classifier>
                                    <type>jar</type>
                                    <version>${version.org.apache.lucene}</version>
                                    <outputDirectory>${tmpdir.dependencies-javadoc-packagelists}/lucene-queryparser</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.batch</groupId>
                                    <artifactId>jakarta.batch-api</artifactId>
                                    <classifier>javadoc</classifier>
                                    <type>jar</type>
                                    <version>${version.jakarta.batch}</version>
                                    <outputDirectory>${tmpdir.dependencies-javadoc-packagelists}/batch-api</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <includes>package-list,element-list</includes>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-dependencies-incubating-report</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.hibernate.orm</groupId>
                                    <artifactId>hibernate-core</artifactId>
                                    <type>jar</type>
                                    <version>${version.org.hibernate.orm}</version>
                                    <outputDirectory>${tmpdir.dependencies-to-parse}/hibernate-core</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-hibernate-core-incubating-report</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.hibernate.checkstyle.report.ReportGenerator</mainClass>
                            <arguments>
                                <!-- The location of classes to process: -->
                                <argument>${tmpdir.dependencies-to-parse}/hibernate-core</argument>
                                <!--
                                    The report output file path.
                                    We write to the build output directory so that the report is included in the jar:
                                -->
                                <argument>${project.build.outputDirectory}/hibernate-core-incubating.txt</argument>
                                <!-- The annotation to look for: -->
                                <argument>org.hibernate.Incubating</argument>
                                <!-- Ignore rules: -->
                                <argument>^org\.hibernate\.query\.Query$</argument>
                                <argument>^org\.hibernate\.query\.SelectionQuery$</argument>
                                <argument>^org\.hibernate\.query\.MutationQuery$</argument>
                                <argument>^org\.hibernate\.query\.BindableType$</argument>

                                <argument>^org\.hibernate\.metamodel\.MappingMetamodel$</argument>
                                <argument>^org\.hibernate\.metamodel\.mapping\.Bindable$</argument>
                                <argument>^org\.hibernate\.metamodel\.mapping\.SelectableMapping$</argument>
                                <argument>^org\.hibernate\.metamodel\.mapping\.SelectablePath$</argument>
                                <argument>^org\.hibernate\.metamodel\.model\.domain\.JpaMetamodel$</argument>

                                <argument>^org\.hibernate\.boot\.spi\.BootstrapContext$</argument>
                                <argument>^org\.hibernate\.collection\.spi\.PersistentCollection$</argument>
                                <argument>^org\.hibernate\.type\.spi\.TypeConfiguration$</argument>
                                <argument>^org\.hibernate\.query\.spi\.ScrollableResultsImplementor$</argument>
                                <argument>^org\.hibernate\.query\.sqm\.spi\.SqmCreationContext$</argument>

                                <!-- Rules for things used in tests: -->
                                <argument>^org\.hibernate\.SessionEventListener$</argument>
                                <argument>^org\.hibernate\.tool\.schema\.spi\.SchemaCreator$</argument>
                                <argument>^org\.hibernate\.tool\.schema\.spi\.SchemaValidator$</argument>
                                <argument>^org\.hibernate\.tool\.schema\.spi\.SchemaMigrator$</argument>
                                <argument>^org\.hibernate\.tool\.schema\.spi\.SchemaDropper$</argument>
                                <argument>^org\.hibernate\.tool\.schema\.spi\.SchemaManagementTool$</argument>
                                <argument>^org\.hibernate\.tool\.schema\.spi\.ExtractionTool$</argument>
                                <argument>^org\.hibernate\.tool\.schema\.spi\.ExecutionOptions$</argument>
                                <argument>^org\.hibernate\.collection\.spi\.LazyInitializable$</argument>
                            </arguments>
                            <!--
                                While this will include more than we really need, it is easier to do so.
                                Alternatively, if we would use plugin dependencies and add Jandex there,
                                we would need to explicitly specify the version of Jandex, since dependency management
                                doesn't seem to work on dependencies added to a plugin configuration >_<
                            -->
                            <includeProjectDependencies>true</includeProjectDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package-dependencies-javadoc-packagelists</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <skipAssembly>${maven.javadoc.skip}</skipAssembly>
                            <descriptors>
                                <descriptor>src/main/assembly/dependencies-javadoc-packagelists.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
