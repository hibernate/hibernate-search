<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Hibernate Search, full-text search for your domain model
 ~
 ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later
 ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
  -->
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<module name="Checker">

    <property name="cacheFile" value="${checkstyle.cache.file}" />

    <module name="Header">
        <property name="header" value="/*\n * Hibernate Search, full-text search for your domain model\n *\n * License: GNU Lesser General Public License (LGPL), version 2.1 or later\n * See the lgpl.txt file in the root directory or &lt;http://www.gnu.org/licenses/lgpl-2.1.html&gt;.\n */"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <module name="Header">
        <property name="header" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!--\n ~ Hibernate Search, full-text search for your domain model\n ~\n ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later\n ~ See the lgpl.txt file in the root directory or &lt;http://www.gnu.org/licenses/lgpl-2.1.html&gt;.\n  --&gt;"/>
        <property name="fileExtensions" value="xml"/>
    </module>

    <module name="TreeWalker">

        <module name="SuppressionCommentFilter" />

        <module name="RegexpSinglelineJava">
            <property name="format" value="(?&lt;!^import static)\s[\w\.]*\b([A-Z]\w*)?Assert(ions?)?\.[a-z]\w*\(" />
            <property name="message" value="Always use static imports for assertions" />
            <property name="ignoreComments" value="true" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="(?&lt;!^import static)\s[\w\.]*\b([A-Z]\w*)?(Assume|Assumptions?)\.[a-z]\w*\(" />
            <property name="message" value="Always use static imports for assumptions" />
            <property name="ignoreComments" value="true" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="(?&lt;!^import static)\s[\w\.]*\bOrmUtils\.[a-z]\w*\(" />
            <property name="message" value="Always use static imports for OrmUtils" />
            <property name="ignoreComments" value="true" />
        </module>

        <!-- Do not use sync blocks on objects -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="synchronized\s*\(\s*(?!this\b)\w+" />
            <!-- The last sentence of the message is a keyword to trigger exclusion: see ExcludeTestPackages -->
            <property name="message" value="Do not use `synchronized (someObject)` blocks. Instead use the `java.util.concurrent.locks.Lock`s. See HSEARCH-4712. [not required for tests]" />
            <property name="ignoreComments" value="true" />
        </module>

        <!-- Keep Tck Runners clean from local changes -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="@IncludeClassNamePatterns\(\{ &quot;(?!\.\*Test&quot;, &quot;\.\*IT).*&quot; \}\)" />
            <property name="message" value="Do not commit updated Tck Runner filter patterns!" />
            <property name="ignoreComments" value="true" />
        </module>

       <!-- Checks for imports -->
        <module name="AvoidStarImport" />

        <!-- Checks for common coding problems -->
        <module name="EqualsHashCode" />
        <module name="IllegalInstantiation" />

        <!-- Miscellaneous other checks. -->
        <module name="ModifierOrder" />
        <module name="PackageAnnotation" />
        <module name="CovariantEquals" />
        <module name="ModifiedControlVariable" />
        <module name="NeedBraces" />
        <module name="OneStatementPerLine" />
        <module name="EmptyStatement" />
        <module name="DefaultComesLast" />
        <module name="TypecastParenPad" />
        <module name="HideUtilityClassConstructor"/>
        <module name="MutableException"/>
        <module name="CovariantEquals" />
        <module name="EqualsAvoidNull" />
        <module name="UpperEll"/>

        <!-- <module name="DeclarationOrder" /> -->
        <!-- not checking for Constructor here: -->
        <module name="RedundantModifier">
            <property name="tokens"
                      value="METHOD_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF, INTERFACE_DEF, CLASS_DEF, ENUM_DEF"/>
        </module>
        <module name="MissingOverride" />

        <module name="MethodParamPad">
            <property name="option" value="nospace" />
            <property name="allowLineBreaks" value="false" />
        </module>

        <module name="ParenPad">
            <property name="tokens" value="CTOR_CALL, SUPER_CTOR_CALL, LITERAL_FOR, LITERAL_IF,
                        LITERAL_WHILE, LITERAL_SWITCH, LITERAL_NEW, METHOD_CALL, RESOURCE_SPECIFICATION"/>
            <property name="option" value="space"/>
        </module>

        <!-- WARN, ERROR and INFO Logging severity levels should be used exclusively via the methods which allow i18 -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="log\.((error)|(warn)|(info))\(" />
            <!-- The last sentence of the message is a keyword to trigger exclusion: see ExcludeTestPackages -->
            <property name="message" value="'log.error()', warn() and info() should never be used. [not required for tests]" />
            <property name="ignoreComments" value="true" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="System\.(out)|(err)\.print(ln)?\(" />
            <!-- The last sentence of the message is a keyword to trigger exclusion: see ExcludeTestPackages -->
            <property name="message" value="Not allowed to print to System.out: if you're damn sure you want it, disable Checkstyle on this line. [not required for tests]" />
            <property name="ignoreComments" value="true" />
        </module>

        <!-- Loggers should follow conventions and best practices -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="(?&lt;!\bstatic final) Log \w+ =" />
            <property name="message" value="Loggers must be static final" />
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="\bLog (?!log |\w+Log |INSTANCE )\w+ =" />
            <property name="message" value="Loggers must be named exactly `log` (or in some specific cases `INSTANCE` or `&lt;something&gt;Log`)" />
        </module>
    </module>

    <module name="org.hibernate.checkstyle.filters.ExcludeTestPackages" />

    <module name="RegexpSingleline">
        <!-- not using an "illegal import" rule as the java.lang package doesn't need to be imported -->
        <property name="format" value="\s+throw new AssertionError\(" />
        <property name="message" value="Avoid throwing 'AssertionError': use org.hibernate.search.exception.AssertionFailure" />
    </module>

    <module name="SuppressionFilter">
        <property name="file" value="/suppressions.xml" />
    </module>

</module>
