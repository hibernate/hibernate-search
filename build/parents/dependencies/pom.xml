<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.search</groupId>
        <artifactId>hibernate-search-parent</artifactId>
        <version>7.0.0-SNAPSHOT</version>
        <relativePath>../../..</relativePath>
    </parent>

    <artifactId>hibernate-search-parent-dependencies</artifactId>
    <name>Hibernate Search - Parent Dependencies</name>
    <description>
        Provides dependency management for all dependencies required during the build time.
        Imports the ones from the public BOM.
    </description>
    <packaging>pom</packaging>

    <properties>
        <!-- >>> Common -->
        <version.org.jboss.logging.jboss-logging>3.5.3.Final</version.org.jboss.logging.jboss-logging>
        <version.org.jboss.logging.jboss-logging-tools>2.2.1.Final</version.org.jboss.logging.jboss-logging-tools>
        <javadoc.org.hibernate.search.url>https://docs.jboss.org/hibernate/search/${parsed-version.org.hibernate.search.majorVersion}.${parsed-version.org.hibernate.search.minorVersion}/api/</javadoc.org.hibernate.search.url>

        <!-- >>> Engine -->
        <!-- Nothing beyond common dependencies -->

        <!-- >>> Lucene -->
        <!-- When upgrading Lucene, make sure to align the dependency to com.carrotsearch.hppc (see below) -->
        <version.org.apache.lucene>9.7.0</version.org.apache.lucene>
        <javadoc.org.apache.lucene.tag>${parsed-version.org.apache.lucene.majorVersion}_${parsed-version.org.apache.lucene.minorVersion}_${parsed-version.org.apache.lucene.incrementalVersion}</javadoc.org.apache.lucene.tag>
        <javadoc.org.apache.lucene.core.url>https://lucene.apache.org/core/${javadoc.org.apache.lucene.tag}/core/</javadoc.org.apache.lucene.core.url>
        <javadoc.org.apache.lucene.analyzers-common.url>https://lucene.apache.org/core/${javadoc.org.apache.lucene.tag}/analyzers-common/</javadoc.org.apache.lucene.analyzers-common.url>
        <javadoc.org.apache.lucene.queryparser.url>https://lucene.apache.org/core/${javadoc.org.apache.lucene.tag}/queryparser/</javadoc.org.apache.lucene.queryparser.url>
        <!-- These version must be kept in sync with the version of the dependency in Lucene.
            This dependency has a runtime scope in the lucene-facet lib,
            as a result the maven-enforcer-plugin cannot detect if the version is different from the one we are relying on.
            So if dependabot reports an update - check if the version would be aligned or not.
         -->
        <version.com.carrotsearch.hppc>0.9.1</version.com.carrotsearch.hppc>

        <!-- >>> Elasticsearch -->
        <!-- The version of the Elasticsearch client used by Hibernate Search, independently of the version of the remote cluster -->
        <!-- Use the latest open-source version here. Currently, low-level clients are open-source even in 8.5+ -->
        <!-- NOTE: when updating this version check if the Jackson version is still aligned. -->
        <version.org.elasticsearch.client>8.9.0</version.org.elasticsearch.client>
        <!-- The main compatible version of Elasticsearch, advertised by default. Used in documentation links. -->
        <!-- When updating the following version you will likely need to update the test profiles as well,
             to make sure the corresponding profile (e.g. elasticsearch-8.4) becomes the default. -->
        <version.org.elasticsearch.compatible.main>${version.org.elasticsearch.latest}</version.org.elasticsearch.compatible.main>
        <documentation.org.elasticsearch.url>https://www.elastic.co/guide/en/elasticsearch/reference/${parsed-version.org.elasticsearch.compatible.main.majorVersion}.${parsed-version.org.elasticsearch.compatible.main.minorVersion}</documentation.org.elasticsearch.url>

        <!-- The versions of Elasticsearch advertised as compatible with Hibernate Search -->
        <!-- Make sure to only mention tested versions here -->
        <!-- Make sure that 7.10 stays explicitly mentioned here, because that's the last open-source version -->
        <version.org.elasticsearch.compatible.regularly-tested.text>7.10, 7.17 or 8.9</version.org.elasticsearch.compatible.regularly-tested.text>
        <!-- These are the versions same as above, but pointing only to the major part (used in compatibility section of ES backend documentation
          as versions that Hibernate Search is compatible with. -->
        <!-- NOTE: Adding new major versions would require to update the compatibility table in `backend-elasticsearch-compatibility` section of `backend-elasticsearch.asciidoc`. -->
        <version.org.elasticsearch.compatible.expected.text>7.x or 8.x</version.org.elasticsearch.compatible.expected.text>
        <!-- The versions of Elasticsearch that may work, but are not given priority for bugfixes and new features -->
        <version.org.elasticsearch.compatible.not-regularly-tested.text>7.0 or 8.0</version.org.elasticsearch.compatible.not-regularly-tested.text>
        <!-- The latest version of Elasticsearch tested against by default -->
        <version.org.elasticsearch.latest>8.9.0</version.org.elasticsearch.latest>
        <!-- The versions of OpenSearch advertised as compatible with Hibernate Search -->
        <!-- Make sure to only mention tested versions here -->
        <version.org.opensearch.compatible.regularly-tested.text>1.3 or 2.9</version.org.opensearch.compatible.regularly-tested.text>
        <!-- These are the versions same as above, but pointing only to the major part (used in compatibility section of ES backend documentation
          as versions that Hibernate Search is compatible with. -->
        <!-- NOTE: Adding new major versions would require to update the compatibility table in `backend-elasticsearch-compatibility` section of `backend-elasticsearch.asciidoc`. -->
        <version.org.opensearch.compatible.expected.text>1.x or 2.x</version.org.opensearch.compatible.expected.text>
        <!-- The latest version of OpenSearch tested against by default -->
        <version.org.opensearch.latest>2.9.0</version.org.opensearch.latest>

        <version.com.google.code.gson>2.9.1</version.com.google.code.gson>
        <version.software.amazon.awssdk>2.20.2</version.software.amazon.awssdk>
        <!--
            Jackson is used by
                * the Elasticsearch REST client sniffer,
                * avro
                * and Wiremock
            We want to align this version on whatever the REST client is using.
            But because we also want to include it in the BOM to align versions, maven-enforcer-plugin will not catch that the
            version is different from whatever version is in those mentioned libraries. So need to update it anytime we
            are updating the Elasticsearch rest client version.
        -->
        <version.com.fasterxml.jackson>2.15.0</version.com.fasterxml.jackson>
        <!-- slf4j: used by the AWS SDK -->
        <version.org.slf4j>1.7.36</version.org.slf4j>

        <!-- >>> ORM 6 with Jakarta Persistence -->
        <!-- IMPORTANT: Make sure that version.jakarta.persistence aligns with the imported version! -->
        <version.org.hibernate.orm>6.3.0.CR1</version.org.hibernate.orm>

        <javadoc.org.hibernate.orm.url>https://docs.jboss.org/hibernate/orm/${parsed-version.org.hibernate.orm.majorVersion}.${parsed-version.org.hibernate.orm.minorVersion}/javadocs/</javadoc.org.hibernate.orm.url>
        <documentation.org.hibernate.orm.url>https://docs.jboss.org/hibernate/orm/${parsed-version.org.hibernate.orm.majorVersion}.${parsed-version.org.hibernate.orm.minorVersion}/userguide/html_single/Hibernate_User_Guide.html</documentation.org.hibernate.orm.url>
        <!-- These version must be kept in sync with the version of the dependency in Hibernate ORM 6.
             DO NOT USE DEPENDENCY MANAGEMENT FOR THESE DEPENDENCIES!
             Thanks to not using dependency management for these dependencies, we get a build failure
             when the versions start diverging, thanks to the maven-enforcer-plugin
             and to our own explicit dependencies in the relevant artifacts.
          -->
        <version.jakarta.enterprise>4.0.1</version.jakarta.enterprise>
        <!--
            IMPORTANT:
            Even though we are importing the Hibernate ORM BOM where Jakarta Persistence is managed, we don't have easy access
            to its version. We need a version to be able to display it in the docs. This property is exactly to address that need.
        -->
        <version.jakarta.persistence>3.1.0</version.jakarta.persistence>

        <!-- >>> JSR 352 -->
        <version.jakarta.batch>2.1.1</version.jakarta.batch>
        <version.org.jberet>2.1.2.Final</version.org.jberet>

        <!-- >>> Java EE/Jakarta EE dependencies -->
        <!-- This is used to generate a link to the Jakarta EE javadoc -->
        <javadoc.jakarta.batch.url>https://jakarta.ee/specifications/batch/${parsed-version.jakarta.batch.majorVersion}.${parsed-version.jakarta.batch.minorVersion}/apidocs/</javadoc.jakarta.batch.url>

        <!-- Test dependencies -->

        <!-- >>> Common -->
        <version.log4j>2.20.0</version.log4j>
        <version.junit>4.13.2</version.junit>
        <version.org.osgi.core>6.0.0</version.org.osgi.core>

        <version.org.hamcrest>2.2</version.org.hamcrest>
        <version.org.mockito>5.4.0</version.org.mockito>
        <version.org.assertj.assertj-core>3.24.2</version.org.assertj.assertj-core>
        <version.org.awaitily>4.2.0</version.org.awaitily>
        <version.org.skyscreamer.jsonassert>1.5.1</version.org.skyscreamer.jsonassert>
        <version.io.takari.junit>1.2.7</version.io.takari.junit>
        <version.com.github.tomakehurst.wiremock>3.0.0-beta-10</version.com.github.tomakehurst.wiremock>
        <version.org.apache.commons.lang3>3.13.0</version.org.apache.commons.lang3>
        <version.org.apache.commons.math3>3.6.1</version.org.apache.commons.math3>
        <version.org.apache.avro>1.11.2</version.org.apache.avro>
        <version.org.jboss.weld>5.1.1.Final</version.org.jboss.weld>

        <!-- >>> JDBC Drivers -->
        <version.com.h2database>2.2.220</version.com.h2database>
        <!-- Sticking to Derby 10.15 for now since later versions require JDK 17+, and we need to test with JDK 11.
             See https://db.apache.org/derby/derby_downloads.html -->
        <version.org.apache.derby>10.15.2.0</version.org.apache.derby>
        <version.org.postgresql>42.6.0</version.org.postgresql>
        <version.org.mariadb.jdbc>3.1.4</version.org.mariadb.jdbc>
        <version.mysql.mysql-connector-java>8.1.0</version.mysql.mysql-connector-java>
        <version.com.ibm.db2.jcc>11.5.8.0</version.com.ibm.db2.jcc>
        <version.com.oracle.database.jdbc>23.2.0.0</version.com.oracle.database.jdbc>
        <version.com.microsoft.sqlserver.mssql-jdbc>12.2.0.jre11</version.com.microsoft.sqlserver.mssql-jdbc>

        <!-- >>> Performance tests -->
        <version.org.openjdk.jmh>1.37</version.org.openjdk.jmh>

        <!-- >>> JSR 352: JBatch runtime -->
        <version.com.ibm.jbatch>2.1.1</version.com.ibm.jbatch>

        <!-- >>> JSR 352: JBeret SE dependencies -->
        <version.org.jboss.marshalling>2.1.1.Final</version.org.jboss.marshalling>
        <version.org.wildfly.security.wildfly-security-manager>1.1.2.Final</version.org.wildfly.security.wildfly-security-manager>
        <version.org.google.guava>31.1-jre</version.org.google.guava>

        <!-- >>> Spring integration tests -->
        <version.org.springframework.boot>3.1.1</version.org.springframework.boot>
        <!-- Spring Boot 3 Atomikos starter and related libs version: -->
        <version.com.atomikos>6.0.0</version.com.atomikos>

        <!-- Public modules must be signed. -->
        <release.gpg.signing.skip>false</release.gpg.signing.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Remaining Hibernate Search dependencies -->
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-configuration-properties-collector</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-documentation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-documentation</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
            </dependency>

            <!-- Import Hibernate ORM BOM -->
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-platform</artifactId>
                <version>${version.org.hibernate.orm}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Imported dependencies that we want to override -->
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>${version.org.jboss.logging.jboss-logging}</version>
            </dependency>

            <!-- Other public dependencies -->
            <!-- Elasticsearch backend -->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${version.org.elasticsearch.client}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client-sniffer</artifactId>
                <version>${version.org.elasticsearch.client}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${version.com.google.code.gson}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>auth</artifactId>
                <version>${version.software.amazon.awssdk}</version>
            </dependency>

            <!-- Lucene backend -->
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
                <version>${version.org.apache.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analysis-common</artifactId>
                <version>${version.org.apache.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-queryparser</artifactId>
                <version>${version.org.apache.lucene}</version>
                <exclusions>
                    <!-- This artifact contains unstable, experimental code that we cannot reasonably rely on. -->
                    <exclusion>
                        <groupId>org.apache.lucene</groupId>
                        <artifactId>lucene-sandbox</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-join</artifactId>
                <version>${version.org.apache.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-facet</artifactId>
                <version>${version.org.apache.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-highlighter</artifactId>
                <version>${version.org.apache.lucene}</version>
            </dependency>
            <dependency>
                <groupId>com.carrotsearch</groupId>
                <artifactId>hppc</artifactId>
                <version>${version.com.carrotsearch.hppc}</version>
            </dependency>

            <!-- Apache Avro used to serialize/deserialize objects in outbox polling coordination -->
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${version.org.apache.avro}</version>
            </dependency>

            <!-- JakartaEE dependencies -->
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>jakarta.batch-api</artifactId>
                <version>${version.jakarta.batch}</version>
                <scope>provided</scope>
            </dependency>

            <!-- JBeret used by batch-jsr352 jberet module -->
            <dependency>
                <groupId>org.jberet</groupId>
                <artifactId>jberet-core</artifactId>
                <version>${version.org.jberet}</version>
                <exclusions>
                    <!-- These dependencies are marked as "provided" but will never be there at runtime.
                         This confuses maven-enforcer-plugin, so we'll exclude them. -->
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging-processor</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.infinispan</groupId>
                        <artifactId>infinispan-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.infinispan</groupId>
                        <artifactId>infinispan-commons</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--
                We don't really use Jackson directly, but elasticsearch-rest-client-sniffer
                To resolve dependency convergence issue between `avro` and `elasticsearch-rest-client-sniffer`
                elasticsearch-rest-client-sniffer only has `jackson-core` while avro has all 3.
                We want the versions of those to be aligned
            -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${version.com.fasterxml.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${version.com.fasterxml.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${version.com.fasterxml.jackson}</version>
            </dependency>

            <!-- We only need it for build purposes. -->
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging-annotations</artifactId>
                <version>${version.org.jboss.logging.jboss-logging-tools}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>

            <!-- Hibernate Search Test utils and Tests -->
            <!-- Utils -->
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-test-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-test-orm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-backend-elasticsearch</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-backend-lucene</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-mapper-stub</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-mapper-pojo-standalone</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-mapper-orm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-v5migrationhelper</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-jbatch-runtime</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-jberet-se</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Tests -->
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-backend-tck</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-backend-elasticsearch</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-backend-lucene</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-pojo-base</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-cdi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-spring</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-envers</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-realbackend</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-pojo-standalone-realbackend</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-showcase-library</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-v5migrationhelper-engine</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-v5migrationhelper-orm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-coordination-outbox-polling</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-batch-jsr352</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${version.junit}</version>
            </dependency>
            <!--
                Manage the upgrade from Hamcrest 1.x to 2.x:
                http://hamcrest.org/JavaHamcrest/distributables#upgrading-from-hamcrest-1x
             -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${version.org.hamcrest}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${version.org.hamcrest}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${version.org.hamcrest}</version>
            </dependency>
            <dependency>
                <groupId>io.takari.junit</groupId>
                <artifactId>takari-cpsuite</artifactId>
                <version>${version.io.takari.junit}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${version.org.mockito}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>${version.org.osgi.core}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${version.org.assertj.assertj-core}</version>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${version.org.awaitily}</version>
            </dependency>
            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${version.org.skyscreamer.jsonassert}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock</artifactId>
                <version>${version.com.github.tomakehurst.wiremock}</version>
            </dependency>
            <dependency>
                <!-- Dependency management is necessary for Wiremock in particular (it has internal dependency divergence) -->
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${version.org.apache.commons.lang3}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se-shaded</artifactId>
                <version>${version.org.jboss.weld}</version>
            </dependency>

            <!-- JDBC Drivers -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.com.h2database}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>${version.org.apache.derby}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.org.postgresql}</version>
            </dependency>
            <dependency>
                <groupId>org.mariadb.jdbc</groupId>
                <artifactId>mariadb-java-client</artifactId>
                <version>${version.org.mariadb.jdbc}</version>
            </dependency>
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${version.mysql.mysql-connector-java}</version>
            </dependency>
            <dependency>
                <groupId>com.ibm.db2</groupId>
                <artifactId>jcc</artifactId>
                <version>${version.com.ibm.db2.jcc}</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc11</artifactId>
                <version>${version.com.oracle.database.jdbc}</version>
            </dependency>
            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>mssql-jdbc</artifactId>
                <version>${version.com.microsoft.sqlserver.mssql-jdbc}</version>
            </dependency>

            <!-- Performance tests -->
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${version.org.openjdk.jmh}</version>
            </dependency>

            <!-- JBatch runtime -->
            <dependency>
                <groupId>com.ibm.jbatch</groupId>
                <artifactId>com.ibm.jbatch.container</artifactId>
                <version>${version.com.ibm.jbatch}</version>
            </dependency>

            <!-- JBeret Core and JBeret SE runtime dependencies -->
            <dependency>
                <groupId>org.jboss.marshalling</groupId>
                <artifactId>jboss-marshalling</artifactId>
                <version>${version.org.jboss.marshalling}</version>
            </dependency>
            <dependency>
                <groupId>org.wildfly.security</groupId>
                <artifactId>wildfly-security-manager</artifactId>
                <version>${version.org.wildfly.security.wildfly-security-manager}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.jberet</groupId>
                <artifactId>jberet-se</artifactId>
                <version>${version.org.jberet}</version>
            </dependency>

            <!-- For javadocs parsing -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${version.jsoup}</version>
            </dependency>

            <!-- We only need these two libs here for testing utils -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${version.org.google.guava}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>${version.org.apache.commons.math3}</version>
            </dependency>

            <!-- Solve dependency convergence issues through exclusions for transitive-only dependencies -->
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-core</artifactId>
                <!-- DO NOT REMOVE and DO NOT MANAGE the version of this dependency. See the version property declaration. -->
                <exclusions>
                    <!-- Also imported by jakarta.xml.bind-api -->
                    <exclusion>
                        <groupId>jakarta.activation</groupId>
                        <artifactId>jakarta.activation-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- To resolve dependency convergence issue between `software.amazon.awssdk` and `org.apache.avro` -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.org.slf4j}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>parse-hibernate-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.org.hibernate.orm</propertyPrefix>
                            <versionString>${version.org.hibernate.orm}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-hibernate-orm-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.org.hibernate.orm</propertyPrefix>
                            <versionString>${version.org.hibernate.orm}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-lucene-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.org.apache.lucene</propertyPrefix>
                            <versionString>${version.org.apache.lucene}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-elasticsearch-main-compatible-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.org.elasticsearch.compatible.main</propertyPrefix>
                            <versionString>${version.org.elasticsearch.compatible.main}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-elasticsearch-client-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.org.elasticsearch.client</propertyPrefix>
                            <versionString>${version.org.elasticsearch.client}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-gson-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.com.google.code.gson</propertyPrefix>
                            <versionString>${version.com.google.code.gson}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-jakarta-persistence-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.jakarta.persistence</propertyPrefix>
                            <versionString>${version.jakarta.persistence}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-jakarta-batch-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.jakarta.batch</propertyPrefix>
                            <versionString>${version.jakarta.batch}</versionString>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
