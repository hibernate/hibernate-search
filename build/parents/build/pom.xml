<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.search</groupId>
        <artifactId>hibernate-search-parent</artifactId>
        <version>7.0.0-SNAPSHOT</version>
        <relativePath>../../..</relativePath>
    </parent>

    <artifactId>hibernate-search-parent-build</artifactId>
    <name>Hibernate Search - Parent Build</name>
    <description>
        Provides dependency and plugin management required during the build time.
    </description>
    <packaging>pom</packaging>

    <properties>
        <!-- Main dependencies -->

        <!-- >>> Common -->
        <version.org.jboss.logging.jboss-logging>3.5.3.Final</version.org.jboss.logging.jboss-logging>
        <version.org.jboss.logging.jboss-logging-tools>2.2.1.Final</version.org.jboss.logging.jboss-logging-tools>
        <javadoc.org.hibernate.search.url>https://docs.jboss.org/hibernate/search/${parsed-version.org.hibernate.search.majorVersion}.${parsed-version.org.hibernate.search.minorVersion}/api/</javadoc.org.hibernate.search.url>

        <!-- >>> Engine -->
        <!-- Nothing beyond common dependencies -->

        <!-- >>> Lucene -->
        <!-- When upgrading Lucene, make sure to align the dependency to com.carrotsearch.hppc (see below) -->
        <version.org.apache.lucene>9.8.0</version.org.apache.lucene>
        <javadoc.org.apache.lucene.tag>${parsed-version.org.apache.lucene.majorVersion}_${parsed-version.org.apache.lucene.minorVersion}_${parsed-version.org.apache.lucene.incrementalVersion}</javadoc.org.apache.lucene.tag>
        <javadoc.org.apache.lucene.core.url>https://lucene.apache.org/core/${javadoc.org.apache.lucene.tag}/core/</javadoc.org.apache.lucene.core.url>
        <javadoc.org.apache.lucene.analyzers-common.url>https://lucene.apache.org/core/${javadoc.org.apache.lucene.tag}/analyzers-common/</javadoc.org.apache.lucene.analyzers-common.url>
        <javadoc.org.apache.lucene.queryparser.url>https://lucene.apache.org/core/${javadoc.org.apache.lucene.tag}/queryparser/</javadoc.org.apache.lucene.queryparser.url>
        <!-- These version must be kept in sync with the version of the dependency in Lucene.
            This dependency has a runtime scope in the lucene-facet lib,
            as a result the maven-enforcer-plugin cannot detect if the version is different from the one we are relying on.
            So if dependabot reports an update - check if the version would be aligned or not.
         -->
        <version.com.carrotsearch.hppc>0.9.1</version.com.carrotsearch.hppc>

        <!-- >>> Elasticsearch -->
        <!-- The version of the Elasticsearch client used by Hibernate Search, independently of the version of the remote cluster -->
        <!-- Use the latest open-source version here. Currently, low-level clients are open-source even in 8.5+ -->
        <version.org.elasticsearch.client>8.11.1</version.org.elasticsearch.client>
        <!-- The main compatible version of Elasticsearch, advertised by default. Used in documentation links. -->
        <!-- When updating the following version you will likely need to update the test profiles as well,
             to make sure the corresponding profile (e.g. elasticsearch-8.4) becomes the default. -->
        <version.org.elasticsearch.compatible.main>${version.org.elasticsearch.latest}</version.org.elasticsearch.compatible.main>
        <documentation.org.elasticsearch.url>https://www.elastic.co/guide/en/elasticsearch/reference/${parsed-version.org.elasticsearch.compatible.main.majorVersion}.${parsed-version.org.elasticsearch.compatible.main.minorVersion}</documentation.org.elasticsearch.url>

        <!-- The versions of Elasticsearch advertised as compatible with Hibernate Search -->
        <!-- Make sure to only mention tested versions here -->
        <!-- Make sure that 7.10 stays explicitly mentioned here, because that's the last open-source version -->
        <version.org.elasticsearch.compatible.regularly-tested.text>7.10, 7.17 or 8.11</version.org.elasticsearch.compatible.regularly-tested.text>
        <!-- These are the versions same as above, but pointing only to the major part (used in compatibility section of ES backend documentation
          as versions that Hibernate Search is compatible with. -->
        <!-- NOTE: Adding new major versions would require to update the compatibility table in `backend-elasticsearch-compatibility` section of `backend-elasticsearch.asciidoc`. -->
        <version.org.elasticsearch.compatible.expected.text>7.10+ or 8.x</version.org.elasticsearch.compatible.expected.text>
        <!-- The versions of Elasticsearch that may work, but are not given priority for bugfixes and new features -->
        <version.org.elasticsearch.compatible.not-regularly-tested.text>7.11 or 8.0</version.org.elasticsearch.compatible.not-regularly-tested.text>
        <!--
            The latest version of Elasticsearch tested against by default is defined in the ROOT POM.
            Make sure to update it when changing the version.org.elasticsearch.client
        -->
        <!-- The versions of OpenSearch advertised as compatible with Hibernate Search -->
        <!-- Make sure to only mention tested versions here -->
        <version.org.opensearch.compatible.regularly-tested.text>1.3 or 2.11</version.org.opensearch.compatible.regularly-tested.text>
        <!-- These are the versions same as above, but pointing only to the major part (used in compatibility section of ES backend documentation
          as versions that Hibernate Search is compatible with. -->
        <!-- NOTE: Adding new major versions would require to update the compatibility table in `backend-elasticsearch-compatibility` section of `backend-elasticsearch.asciidoc`. -->
        <version.org.opensearch.compatible.expected.text>1.3 or 2.x</version.org.opensearch.compatible.expected.text>
        <!-- The latest version of OpenSearch tested against by default -->
        <version.org.opensearch.latest>2.11.0</version.org.opensearch.latest>

        <version.com.google.code.gson>2.9.1</version.com.google.code.gson>
        <version.software.amazon.awssdk>2.21.1</version.software.amazon.awssdk>
        <!-- Jackson: used by the Elasticsearch REST client, by Avro, by the AWS SDK and in tests (wiremock, ...) -->
        <version.com.fasterxml.jackson>2.15.2</version.com.fasterxml.jackson>
        <!-- slf4j: used by the AWS SDK -->
        <version.org.slf4j>1.7.36</version.org.slf4j>

        <!-- >>> ORM 6 with Jakarta Persistence -->
        <!-- IMPORTANT: Make sure that version.jakarta.persistence aligns with the imported version! -->
        <version.org.hibernate.orm>6.3.1.Final</version.org.hibernate.orm>

        <javadoc.org.hibernate.orm.url>https://docs.jboss.org/hibernate/orm/${parsed-version.org.hibernate.orm.majorVersion}.${parsed-version.org.hibernate.orm.minorVersion}/javadocs/</javadoc.org.hibernate.orm.url>
        <documentation.org.hibernate.orm.url>https://docs.jboss.org/hibernate/orm/${parsed-version.org.hibernate.orm.majorVersion}.${parsed-version.org.hibernate.orm.minorVersion}/userguide/html_single/Hibernate_User_Guide.html</documentation.org.hibernate.orm.url>
        <!-- These version must be kept in sync with the version of the dependency in Hibernate ORM 6.
             DO NOT USE DEPENDENCY MANAGEMENT FOR THESE DEPENDENCIES!
             Thanks to not using dependency management for these dependencies, we get a build failure
             when the versions start diverging, thanks to the maven-enforcer-plugin
             and to our own explicit dependencies in the relevant artifacts.
          -->
        <version.jakarta.enterprise>4.0.1</version.jakarta.enterprise>
        <!--
            IMPORTANT:
            Even though we are importing the Hibernate ORM BOM where Jakarta Persistence is managed, we don't have easy access
            to its version. We need a version to be able to display it in the docs. This property is exactly to address that need.
        -->
        <version.jakarta.persistence>3.1.0</version.jakarta.persistence>

        <!-- >>> Jakarta Batch -->
        <version.jakarta.batch>2.1.1</version.jakarta.batch>
        <version.org.jberet>2.1.3.Final</version.org.jberet>

        <!-- >>> Java EE/Jakarta EE dependencies -->
        <!-- This is used to generate a link to the Jakarta EE javadoc -->
        <javadoc.jakarta.batch.url>https://jakarta.ee/specifications/batch/${parsed-version.jakarta.batch.majorVersion}.${parsed-version.jakarta.batch.minorVersion}/apidocs/</javadoc.jakarta.batch.url>

        <!-- Test dependencies -->

        <!-- >>> Common -->
        <version.log4j>2.20.0</version.log4j>
        <version.junit>4.13.2</version.junit>
        <version.junit-jupiter>5.10.0</version.junit-jupiter>
        <version.junit-platform-suite-engine>1.10.0</version.junit-platform-suite-engine>
        <version.org.osgi.core>6.0.0</version.org.osgi.core>
        <!-- Make sure to update Ryuk container version in `ryuk.Dockerfile` whenever updating testcontainers to align it with the lib. -->
        <version.testcontainers>1.19.1</version.testcontainers>

        <version.org.hamcrest>2.2</version.org.hamcrest>
        <version.org.mockito>5.7.0</version.org.mockito>
        <version.org.assertj.assertj-core>3.24.2</version.org.assertj.assertj-core>
        <version.org.awaitily>4.2.0</version.org.awaitily>
        <version.org.skyscreamer.jsonassert>1.5.1</version.org.skyscreamer.jsonassert>
        <version.io.takari.junit>1.2.7</version.io.takari.junit>
        <version.com.github.tomakehurst.wiremock>3.0.0-beta-10</version.com.github.tomakehurst.wiremock>
        <version.org.apache.commons.lang3>3.13.0</version.org.apache.commons.lang3>
        <version.org.apache.commons.math3>3.6.1</version.org.apache.commons.math3>
        <!-- When upgrading Avro make sure to create a new payload in EventPayloadSerializationUtilsTest -->
        <version.org.apache.avro>1.11.3</version.org.apache.avro>
        <version.org.jboss.weld>5.1.1.Final</version.org.jboss.weld>

        <!-- >>> JDBC Drivers -->
        <version.com.h2database>2.2.224</version.com.h2database>
        <!-- Sticking to Derby 10.15 for now since later versions require JDK 17+, and we need to test with JDK 11.
             See https://db.apache.org/derby/derby_downloads.html -->
        <version.org.apache.derby>10.15.2.0</version.org.apache.derby>
        <version.org.postgresql>42.6.0</version.org.postgresql>
        <version.org.mariadb.jdbc>3.1.4</version.org.mariadb.jdbc>
        <version.mysql.mysql-connector-j>8.2.0</version.mysql.mysql-connector-j>
        <version.com.ibm.db2.jcc>11.5.8.0</version.com.ibm.db2.jcc>
        <version.com.oracle.database.jdbc>23.3.0.23.09</version.com.oracle.database.jdbc>
        <version.com.microsoft.sqlserver.mssql-jdbc>12.2.0.jre11</version.com.microsoft.sqlserver.mssql-jdbc>

        <!-- >>> Performance tests -->
        <version.org.openjdk.jmh>1.37</version.org.openjdk.jmh>

        <!-- >>> Jakarta Batch: JBatch runtime -->
        <version.com.ibm.jbatch>2.1.1</version.com.ibm.jbatch>

        <!-- >>> Jakarta Batch: JBeret SE dependencies -->
        <version.org.jboss.marshalling>2.1.3.Final</version.org.jboss.marshalling>
        <version.org.wildfly.security.wildfly-security-manager>1.1.2.Final</version.org.wildfly.security.wildfly-security-manager>
        <version.org.google.guava>32.1.2-jre</version.org.google.guava>

        <!-- >>> Spring integration tests -->
        <version.org.springframework.boot>3.1.1</version.org.springframework.boot>
        <!-- Spring Boot 3 Atomikos starter and related libs version: -->
        <version.com.atomikos>6.0.0</version.com.atomikos>

        <version.jsoup>1.15.3</version.jsoup>

        <!-- Whether javadoc warnings should fail the build -->
        <failOnJavadocWarning>true</failOnJavadocWarning>

        <!-- Set empty default value to avoid Maven leaving property references (${...}) when it doesn't find a value -->
        <maven.javadoc.skip>false</maven.javadoc.skip>
        <!-- We control whether we should download javadoc based on this property
             that defines the phase of some Maven plugin executions,
             because just skipping those plugins doesn't skip dependency resolution,
             which will fail if javadoc wasn't downloaded. -->
        <javadoc.download.phase>generate-resources</javadoc.download.phase>
        <!--
            Some profiles might want to ignore running a property collection processor entirely.
            In such case set this property to `none`.
        -->
        <documentation.config.properties.phase>process-resources</documentation.config.properties.phase>
        <!-- Output for property collection -->
        <documentation.config.properties.output.directory>${rootProject.directory}/target</documentation.config.properties.output.directory>

        <!-- Test settings -->

        <!-- Lucene tests properties -->

        <!-- To skip all Lucene tests from the CLI -->
        <test.lucene.skip>false</test.lucene.skip>

        <!-- Elasticsearch tests properties -->

        <!-- To skip all Elasticsearch tests from the CLI -->
        <test.elasticsearch.skip>false</test.elasticsearch.skip>

        <!-- Control how an Elasticsearch instance is run automatically during tests -->
        <!-- By default, the plugin is not skipped, but each container (elastic, opensearch, etc.) is skipped;
             Maven profiles will re-enable the right container depending on configuration.
          -->
        <test.elasticsearch.run.skip>true</test.elasticsearch.run.skip>
        <!-- This is set to true automatically when the Elasticsearch instance should not be started
             even for modules that include Elasticsearch tests,
             be it because Elasticsearch tests are disabled
             or because an Elasticsearch instance is provided externally.
             See elasticsearch-run, elasticsearch-test-skip and elasticsearch-do-not-run profiles -->
        <test.elasticsearch.run.skip.forRelevantModules>false</test.elasticsearch.run.skip.forRelevantModules>

        <!--
             These properties are transparently passed as system properties to integration tests,
             and retrieved by a test utility:
             org.hibernate.search.util.impl.integrationtest.backend.elasticsearch.ElasticsearchTestHostConnectionConfiguration
             This is better than configuration files filtered by Maven,
             because we will be able to change the configuration without re-compiling the configuration file
             (which is located in a dependency of the integration tests modules).
         -->
        <test.elasticsearch.connection.uris></test.elasticsearch.connection.uris>
        <test.elasticsearch.connection.username></test.elasticsearch.connection.username>
        <test.elasticsearch.connection.password></test.elasticsearch.connection.password>
        <test.elasticsearch.connection.aws.signing.enabled>false</test.elasticsearch.connection.aws.signing.enabled>
        <test.elasticsearch.connection.aws.region></test.elasticsearch.connection.aws.region>
        <test.elasticsearch.connection.aws.credentials.type></test.elasticsearch.connection.aws.credentials.type>
        <test.elasticsearch.connection.aws.credentials.access_key_id></test.elasticsearch.connection.aws.credentials.access_key_id>
        <test.elasticsearch.connection.aws.credentials.secret_access_key></test.elasticsearch.connection.aws.credentials.secret_access_key>
        <!-- Property whose sole purpose is to be referenced in the definition of surefire.jvm.args.module
             when elasticsearch connection is necessary -->
        <test.elasticsearch.connection.jvm.args>
            -Dhibernate.search.backend.uris=${test.elasticsearch.connection.uris}
            -Dhibernate.search.backend.username=${test.elasticsearch.connection.username}
            -Dhibernate.search.backend.password=${test.elasticsearch.connection.password}
            -Dhibernate.search.backend.aws.signing.enabled=${test.elasticsearch.connection.aws.signing.enabled}
            -Dhibernate.search.backend.aws.region=${test.elasticsearch.connection.aws.region}
            -Dhibernate.search.backend.aws.credentials.type=${test.elasticsearch.connection.aws.credentials.type}
            -Dhibernate.search.backend.aws.credentials.access_key_id=${test.elasticsearch.connection.aws.credentials.access_key_id}
            -Dhibernate.search.backend.aws.credentials.secret_access_key=${test.elasticsearch.connection.aws.credentials.secret_access_key}
        </test.elasticsearch.connection.jvm.args>

        <!-- Lucene tests properties -->

        <test.lucene.indexes.path>${project.build.directory}/test-indexes/</test.lucene.indexes.path>

        <!-- Property whose sole purpose is to be referenced in the definition of surefire.jvm.args.module
             when Weld is used. -->
        <!-- Weld performs illegal accesses to java.base to generate proxies, so we need to allow them. -->
        <test.weld.jvm.args>
            --add-opens java.base/java.security=ALL-UNNAMED
            --add-opens java.base/java.lang=ALL-UNNAMED
        </test.weld.jvm.args>

        <test.performance.enable>false</test.performance.enable>

        <!-- Eclipse plugin options -->

        <m2e.apt.activation>jdt_apt</m2e.apt.activation>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--
                Published Hibernate Search artifacts.
                We cannot import the public BOM here instead of listing them all explicitly,
                 as this leads to recursive issues when Gitflow incremental builds are used.
            -->
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-engine</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-backend-elasticsearch</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-backend-elasticsearch-aws</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-backend-lucene</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-mapper-pojo-base</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-mapper-pojo-standalone</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-mapper-orm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-v5migrationhelper-engine</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-v5migrationhelper-orm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-mapper-orm-jakarta-batch-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-mapper-orm-jakarta-batch-jberet</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-mapper-orm-outbox-polling</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-mapper-orm-coordination-outbox-polling</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-mapper-orm-batch-jsr352-core</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-mapper-orm-batch-jsr352-jberet</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
            </dependency>

            <!-- Remaining Hibernate Search dependencies -->
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-configuration-properties-collector</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-documentation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-documentation</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
            </dependency>

            <!-- Import Hibernate ORM BOM -->
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-platform</artifactId>
                <version>${version.org.hibernate.orm}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Imported dependencies that we want to override -->
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>${version.org.jboss.logging.jboss-logging}</version>
            </dependency>

            <!-- Other public dependencies -->
            <!-- Elasticsearch backend -->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${version.org.elasticsearch.client}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client-sniffer</artifactId>
                <version>${version.org.elasticsearch.client}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${version.com.google.code.gson}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>auth</artifactId>
                <version>${version.software.amazon.awssdk}</version>
            </dependency>

            <!-- Lucene backend -->
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
                <version>${version.org.apache.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analysis-common</artifactId>
                <version>${version.org.apache.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-queryparser</artifactId>
                <version>${version.org.apache.lucene}</version>
                <exclusions>
                    <!-- This artifact contains unstable, experimental code that we cannot reasonably rely on. -->
                    <exclusion>
                        <groupId>org.apache.lucene</groupId>
                        <artifactId>lucene-sandbox</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-join</artifactId>
                <version>${version.org.apache.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-facet</artifactId>
                <version>${version.org.apache.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-highlighter</artifactId>
                <version>${version.org.apache.lucene}</version>
            </dependency>
            <dependency>
                <groupId>com.carrotsearch</groupId>
                <artifactId>hppc</artifactId>
                <version>${version.com.carrotsearch.hppc}</version>
            </dependency>

            <!-- Apache Avro used to serialize/deserialize objects in outbox polling coordination -->
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${version.org.apache.avro}</version>
            </dependency>

            <!-- JakartaEE dependencies -->
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>jakarta.batch-api</artifactId>
                <version>${version.jakarta.batch}</version>
                <scope>provided</scope>
            </dependency>

            <!-- JBeret used by Jakarta Batch JBeret module -->
            <dependency>
                <groupId>org.jberet</groupId>
                <artifactId>jberet-core</artifactId>
                <version>${version.org.jberet}</version>
                <exclusions>
                    <!-- These dependencies are marked as "provided" but will never be there at runtime.
                         This confuses maven-enforcer-plugin, so we'll exclude them. -->
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging-processor</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.infinispan</groupId>
                        <artifactId>infinispan-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.infinispan</groupId>
                        <artifactId>infinispan-commons</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Jackson: used by the Elasticsearch REST client, by Avro, by the AWS SDK and in tests (wiremock, ...) -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${version.com.fasterxml.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${version.com.fasterxml.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${version.com.fasterxml.jackson}</version>
            </dependency>

            <!-- We only need it for build purposes. -->
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging-annotations</artifactId>
                <version>${version.org.jboss.logging.jboss-logging-tools}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>

            <!-- Hibernate Search Test utils and Tests -->
            <!-- Utils -->
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-test-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-test-orm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-backend-elasticsearch</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-backend-lucene</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-mapper-stub</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-mapper-pojo-standalone</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-mapper-orm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-v5migrationhelper</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-jbatch-runtime</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-util-internal-integrationtest-jberet-se</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Tests -->
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-backend-tck</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-backend-elasticsearch</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-backend-lucene</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-pojo-base</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-cdi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-spring</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-envers</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-realbackend</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-pojo-standalone-realbackend</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-showcase-library</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-v5migrationhelper-engine</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-v5migrationhelper-orm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-outbox-polling</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-mapper-orm-jakarta-batch</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-spring-repackaged-application</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-java-modules-orm-outbox-polling-elasticsearch</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-java-modules-orm-elasticsearch</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-java-modules-orm-lucene</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-java-modules-pojo-standalone-elasticsearch</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-integrationtest-java-modules-pojo-standalone-lucene</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Test -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${version.junit-jupiter}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${version.testcontainers}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${version.org.mockito}</version>
            </dependency>
            <!--
                Manage the upgrade from Hamcrest 1.x to 2.x:
                http://hamcrest.org/JavaHamcrest/distributables#upgrading-from-hamcrest-1x
             -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${version.org.hamcrest}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${version.org.hamcrest}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${version.org.hamcrest}</version>
            </dependency>
            <dependency>
                <groupId>io.takari.junit</groupId>
                <artifactId>takari-cpsuite</artifactId>
                <version>${version.io.takari.junit}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${version.org.mockito}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>${version.org.osgi.core}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${version.org.assertj.assertj-core}</version>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${version.org.awaitily}</version>
            </dependency>
            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${version.org.skyscreamer.jsonassert}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock</artifactId>
                <version>${version.com.github.tomakehurst.wiremock}</version>
            </dependency>
            <dependency>
                <!-- Dependency management is necessary for Wiremock in particular (it has internal dependency divergence) -->
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${version.org.apache.commons.lang3}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se-shaded</artifactId>
                <version>${version.org.jboss.weld}</version>
            </dependency>

            <!-- JDBC Drivers -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.com.h2database}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>${version.org.apache.derby}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.org.postgresql}</version>
            </dependency>
            <dependency>
                <groupId>org.mariadb.jdbc</groupId>
                <artifactId>mariadb-java-client</artifactId>
                <version>${version.org.mariadb.jdbc}</version>
            </dependency>
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${version.mysql.mysql-connector-j}</version>
            </dependency>
            <dependency>
                <groupId>com.ibm.db2</groupId>
                <artifactId>jcc</artifactId>
                <version>${version.com.ibm.db2.jcc}</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc11</artifactId>
                <version>${version.com.oracle.database.jdbc}</version>
            </dependency>
            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>mssql-jdbc</artifactId>
                <version>${version.com.microsoft.sqlserver.mssql-jdbc}</version>
            </dependency>

            <!-- Performance tests -->
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${version.org.openjdk.jmh}</version>
            </dependency>

            <!-- JBatch runtime -->
            <dependency>
                <groupId>com.ibm.jbatch</groupId>
                <artifactId>com.ibm.jbatch.container</artifactId>
                <version>${version.com.ibm.jbatch}</version>
            </dependency>

            <!-- JBeret Core and JBeret SE runtime dependencies -->
            <dependency>
                <groupId>org.jboss.marshalling</groupId>
                <artifactId>jboss-marshalling</artifactId>
                <version>${version.org.jboss.marshalling}</version>
            </dependency>
            <dependency>
                <groupId>org.wildfly.security</groupId>
                <artifactId>wildfly-security-manager</artifactId>
                <version>${version.org.wildfly.security.wildfly-security-manager}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.jberet</groupId>
                <artifactId>jberet-se</artifactId>
                <version>${version.org.jberet}</version>
            </dependency>

            <!-- For javadocs parsing -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${version.jsoup}</version>
            </dependency>

            <!-- We only need these two libs here for testing utils -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${version.org.google.guava}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>${version.org.apache.commons.math3}</version>
            </dependency>

            <!-- Solve dependency convergence issues through exclusions for transitive-only dependencies -->
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-core</artifactId>
                <!-- DO NOT REMOVE and DO NOT MANAGE the version of this dependency. See the version property declaration. -->
                <exclusions>
                    <!-- Also imported by jakarta.xml.bind-api -->
                    <exclusion>
                        <groupId>jakarta.activation</groupId>
                        <artifactId>jakarta.activation-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- To resolve dependency convergence issue between `software.amazon.awssdk` and `org.apache.avro` -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.org.slf4j}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>default-compile</id>
                            <configuration>
                                <annotationProcessorPaths>
                                    <path>
                                        <groupId>org.jboss.logging</groupId>
                                        <artifactId>jboss-logging-processor</artifactId>
                                        <version>${version.org.jboss.logging.jboss-logging-tools}</version>
                                    </path>
                                    <path>
                                        <groupId>org.jboss.logging</groupId>
                                        <artifactId>jboss-logging</artifactId>
                                        <version>${version.org.jboss.logging.jboss-logging}</version>
                                    </path>
                                </annotationProcessorPaths>
                            </configuration>
                        </execution>
                        <execution>
                            <id>default-testCompile</id>
                            <configuration>
                                <compilerArgs combine.self="append">
                                    <compilerArg>-parameters</compilerArg>
                                </compilerArgs>
                                <testExcludes>
                                    <testExclude>**/noparameters/**/*</testExclude>
                                </testExcludes>
                            </configuration>
                        </execution>
                        <execution>
                            <id>noparameters-testCompile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                            <configuration>
                                <skip>${java-version.test.java17.noParameters.skip}</skip>
                                <proc>none</proc>
                                <executable>${java-version.test.compiler}</executable>
                                <testIncludes>
                                    <testInclude>**/noparameters/**/*</testInclude>
                                </testIncludes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>enforce-banned-dependencies-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <bannedDependencies>
                                        <excludes>
                                            <!-- As we are using ORM 6 and Jakarta we don't want javax dependencies: -->
                                            <exclude>javax.persistence:javax.persistence-api</exclude>
                                            <exclude>javax.transaction:javax.transaction-api</exclude>
                                            <exclude>javax.enterprise:cdi-api</exclude>
                                            <exclude>javax.xml.bind:jaxb-api</exclude>
                                            <exclude>javax.activation:javax.activation-api</exclude>
                                            <!-- We use Jandex 3 instead: io.smallrye:jandex, io.smallrye:jandex-maven-plugin -->
                                            <exclude>org.jboss:jandex*</exclude>
                                        </excludes>
                                    </bannedDependencies>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>de.thetaphi</groupId>
                    <artifactId>forbiddenapis</artifactId>
                    <executions>
                        <execution>
                            <id>verify-forbidden-apis-main-public</id>
                            <configuration>
                                <bundledSignatures>
                                    <!-- These signatures on the top are not specific to any JDK version -->
                                    <bundledSignature>jdk-system-out</bundledSignature>
                                    <bundledSignature>jdk-non-portable</bundledSignature>
                                    <!-- The jdk-reflection is not yet something we can avoid -->
                                    <!--<bundledSignature>jdk-reflection</bundledSignature>-->

                                    <!-- These signatures can safely be limited to the current JDK;
                                         see https://github.com/policeman-tools/forbidden-apis/issues/197#issuecomment-1080370368
                                     -->
                                    <bundledSignature>jdk-unsafe</bundledSignature>

                                    <!-- All following signatures should be replicated for each target JDK version we intend to support -->
                                    <bundledSignature>jdk-deprecated-1.8</bundledSignature>
                                    <bundledSignature>jdk-deprecated-9</bundledSignature>
                                    <bundledSignature>jdk-deprecated-10</bundledSignature>
                                    <bundledSignature>jdk-deprecated-11</bundledSignature>
                                    <bundledSignature>jdk-deprecated-12</bundledSignature>
                                    <bundledSignature>jdk-deprecated-13</bundledSignature>
                                    <bundledSignature>jdk-deprecated-14</bundledSignature>
                                    <bundledSignature>jdk-deprecated-15</bundledSignature>
                                    <bundledSignature>jdk-deprecated-16</bundledSignature>
                                    <bundledSignature>jdk-deprecated-17</bundledSignature>
                                    <bundledSignature>jdk-deprecated-18</bundledSignature>

                                    <bundledSignature>jdk-internal-1.8</bundledSignature>
                                    <bundledSignature>jdk-internal-9</bundledSignature>
                                    <bundledSignature>jdk-internal-10</bundledSignature>
                                    <bundledSignature>jdk-internal-11</bundledSignature>
                                    <bundledSignature>jdk-internal-12</bundledSignature>
                                    <bundledSignature>jdk-internal-13</bundledSignature>
                                    <bundledSignature>jdk-internal-14</bundledSignature>
                                    <bundledSignature>jdk-internal-15</bundledSignature>
                                    <bundledSignature>jdk-internal-16</bundledSignature>
                                    <bundledSignature>jdk-internal-17</bundledSignature>
                                    <bundledSignature>jdk-internal-18</bundledSignature>
                                </bundledSignatures>
                                <signaturesArtifacts>
                                    <signaturesArtifact>
                                        <groupId>org.hibernate.search</groupId>
                                        <artifactId>hibernate-search-build-config</artifactId>
                                        <version>${project.version}</version>
                                        <type>jar</type>
                                        <path>forbidden-public.txt</path>
                                    </signaturesArtifact>
                                    <signaturesArtifact>
                                        <groupId>org.hibernate.search</groupId>
                                        <artifactId>hibernate-search-build-config</artifactId>
                                        <version>${project.version}</version>
                                        <type>jar</type>
                                        <path>hibernate-core-incubating.txt</path>
                                    </signaturesArtifact>
                                    <signaturesArtifact>
                                        <groupId>org.hibernate.search</groupId>
                                        <artifactId>hibernate-search-build-config</artifactId>
                                        <version>${project.version}</version>
                                        <type>jar</type>
                                        <path>hibernate-core-internal-packages.txt</path>
                                    </signaturesArtifact>
                                </signaturesArtifacts>
                            </configuration>
                            <phase>compile</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify-forbidden-apis-main-internal</id>
                            <configuration>
                                <bundledSignatures>
                                    <!-- This will automatically choose the right signatures based on 'targetVersion': -->
                                    <bundledSignature>jdk-unsafe</bundledSignature>
                                    <bundledSignature>jdk-deprecated</bundledSignature>
                                    <bundledSignature>jdk-non-portable</bundledSignature>
                                    <bundledSignature>jdk-internal</bundledSignature>
                                </bundledSignatures>
                                <signaturesArtifacts>
                                    <signaturesArtifact>
                                        <groupId>org.hibernate.search</groupId>
                                        <artifactId>hibernate-search-build-config</artifactId>
                                        <version>${project.version}</version>
                                        <type>jar</type>
                                        <path>forbidden-internal.txt</path>
                                    </signaturesArtifact>
                                </signaturesArtifacts>
                            </configuration>
                            <!-- Disabled by default; see parents/internal -->
                            <phase>none</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify-forbidden-apis-tests</id>
                            <configuration>
                                <bundledSignatures>
                                    <!-- This will automatically choose the right signatures based on 'targetVersion': -->
                                    <bundledSignature>jdk-unsafe</bundledSignature>
                                    <bundledSignature>jdk-deprecated</bundledSignature>
                                    <bundledSignature>jdk-non-portable</bundledSignature>
                                    <bundledSignature>jdk-internal</bundledSignature>
                                </bundledSignatures>
                                <signaturesArtifacts>
                                    <signaturesArtifact>
                                        <groupId>org.hibernate.search</groupId>
                                        <artifactId>hibernate-search-build-config</artifactId>
                                        <version>${project.version}</version>
                                        <type>jar</type>
                                        <path>forbidden-internal.txt</path>
                                    </signaturesArtifact>
                                </signaturesArtifacts>
                            </configuration>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCheck</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <dependencies>
                        <dependency>
                            <groupId>org.hibernate.search</groupId>
                            <artifactId>hibernate-search-build-config</artifactId>
                            <version>${project.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${version.com.puppycrawl.tools.checkstyle}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <!-- Location is relative to the classpath -->
                        <configLocation>checkstyle.xml</configLocation>
                        <logViolationsToConsole>true</logViolationsToConsole>
                        <failOnViolation>true</failOnViolation>
                        <violationSeverity>error</violationSeverity>
                        <includeTestResources>true</includeTestResources>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <resourceIncludes>**/*.xml,**/*.properties</resourceIncludes>
                        <!-- generated respectively copied code -->
                        <excludes>
                            **/Generated.java,**/TypeHelper*.java,**/MatchSuppressor.java,**/CommentSuppressor.java,**/NeverSuppress.java,
                            **/*_$logger.java,**/*_$bundle.java,
                            **/module-info.java,
                            **/avro/generated/**/*.java
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>check-style</id>
                            <phase>verify</phase>
                            <!-- not using checkstyle:checkstyle here, as for
                                some reason checkstyle:check finds more errors -->
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                        <execution>
                            <!--
                            Execution specific to test sources that are compiled with no `-parameters` flag.
                            Checks whether package of such tests is constructed with a `noparameters` subpackage.
                            -->
                            <id>check-style-noparameters</id>
                            <phase>verify</phase>
                            <!-- not using checkstyle:checkstyle here, as for
                                some reason checkstyle:check finds more errors -->
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <skip>${maven.compiler.testSources.noParameterCompilation.skip}</skip>
                                <configLocation>checkstyle-noparameters.xml</configLocation>
                                <testSourceDirectories>
                                    <testSourceDirectory>${project.basedir}/src/test/java17-noparameters</testSourceDirectory>
                                </testSourceDirectories>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro-maven-plugin</artifactId>
                    <!-- Managing the version here and not in the root POM,
                         contrary to other Maven plugins,
                         because we want to align on the runtime dependency to Avro,
                         and that one is managed in this POM
                         so the corresponding version is not available in the root POM. -->
                    <version>${version.org.apache.avro}</version>
            </plugin>
            <!--
                Test configuration
             -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <systemPropertyVariables>
                            <org.hibernate.search.enable_performance_tests>${test.performance.enable}</org.hibernate.search.enable_performance_tests>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <environmentVariables>
                            <!-- Just to be sure that we are pulling/using the Ryuk from docker.io -->
                            <TESTCONTAINERS_RYUK_CONTAINER_IMAGE>docker.io/testcontainers/ryuk:0.5.1</TESTCONTAINERS_RYUK_CONTAINER_IMAGE>
                            <!--
                                Startup checks might want to test whether the images can be pulled (e.g. see `tinyimage.container.image` config property).
                                To prevent that and speedup the startup a bit the checks are disabled.
                                In case there are any issues, the checks can be enabled.
                                Also for debugging purposes consider enabling testcontainers debug logs (https://java.testcontainers.org/supported_docker_environment/logging_config/).
                             -->
                            <TESTCONTAINERS_CHECKS_DISABLE>true</TESTCONTAINERS_CHECKS_DISABLE>
                        </environmentVariables>
                        <systemPropertyVariables>
                            <org.hibernate.search.version>${project.version}</org.hibernate.search.version>
                            <org.hibernate.search.enable_performance_tests>${test.performance.enable}</org.hibernate.search.enable_performance_tests>
                            <org.hibernate.search.integrationtest.backend.elasticsearch.distribution>${test.elasticsearch.distribution}</org.hibernate.search.integrationtest.backend.elasticsearch.distribution>
                            <org.hibernate.search.integrationtest.backend.elasticsearch.version>${test.elasticsearch.version}</org.hibernate.search.integrationtest.backend.elasticsearch.version>
                            <org.hibernate.search.integrationtest.orm.database.kind>${test.database.run.kind}</org.hibernate.search.integrationtest.orm.database.kind>
                            <org.hibernate.search.integrationtest.project.root.directory>${rootProject.directory}</org.hibernate.search.integrationtest.project.root.directory>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>parse-hibernate-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.org.hibernate.orm</propertyPrefix>
                            <versionString>${version.org.hibernate.orm}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-hibernate-orm-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.org.hibernate.orm</propertyPrefix>
                            <versionString>${version.org.hibernate.orm}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-lucene-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.org.apache.lucene</propertyPrefix>
                            <versionString>${version.org.apache.lucene}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-elasticsearch-main-compatible-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.org.elasticsearch.compatible.main</propertyPrefix>
                            <versionString>${version.org.elasticsearch.compatible.main}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-elasticsearch-client-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.org.elasticsearch.client</propertyPrefix>
                            <versionString>${version.org.elasticsearch.client}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-elasticsearch-test-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.test.elasticsearch.version</propertyPrefix>
                            <versionString>${test.elasticsearch.version}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-gson-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.com.google.code.gson</propertyPrefix>
                            <versionString>${version.com.google.code.gson}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-jakarta-persistence-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.jakarta.persistence</propertyPrefix>
                            <versionString>${version.jakarta.persistence}</versionString>
                        </configuration>
                    </execution>
                    <execution>
                        <id>parse-jakarta-batch-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsed-version.jakarta.batch</propertyPrefix>
                            <versionString>${version.jakarta.batch}</versionString>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>de.thetaphi</groupId>
                <artifactId>forbiddenapis</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>ci-build</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <configuration>
                                <environmentVariables>
                                    <!-- To make Testcontainers reusable on CI, where ~/.testcontainers.properties is not necessarily defined -->
                                    <TESTCONTAINERS_REUSE_ENABLE>true</TESTCONTAINERS_REUSE_ENABLE>
                                </environmentVariables>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <!-- Profile used when testing dependency updates on CI -->
        <profile>
            <id>dependency-update</id>
            <properties>
                <!-- Skip parts of the build that may fail but don't matter when testing upgrades -->
                <checkstyle.skip>true</checkstyle.skip>
                <format.skip>true</format.skip>
                <maven.javadoc.skip>true</maven.javadoc.skip>
                <javadoc.download.phase>none</javadoc.download.phase>
                <enforcer.dependencyconvergence.skip>true</enforcer.dependencyconvergence.skip>
                <documentation.config.properties.phase>none</documentation.config.properties.phase>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <!-- We don't care about deprecation and other warnings when
                                 testing compatibility with updated dependencies. -->
                            <failOnWarning>false</failOnWarning>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <repositories>
                <!--
                    Enable the sonatype-oss Snapshots repository, for Hibernate ORM 6+ in particular.
                 -->
                <repository>
                    <id>sonatype-oss</id>
                    <name>JBoss Public Maven Repository Group</name>
                    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
                    <layout>default</layout>
                    <releases>
                        <!-- versions-maven-plugin will ignore this repo, even for snapshots,
                             unless we enable releases.
                             This is most likely a bug. -->
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>always</updatePolicy>
                    </snapshots>
                </repository>
                <!--
                    Enable the JBoss Snapshots repository, for Hibernate ORM 5.6 in particular.
                 -->
                <repository>
                    <id>jboss-public-repository-group</id>
                    <name>JBoss Public Maven Repository Group</name>
                    <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
                    <layout>default</layout>
                    <releases>
                        <!-- versions-maven-plugin will ignore this repo, even for snapshots,
                             unless we enable releases.
                             This is most likely a bug. -->
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>always</updatePolicy>
                    </snapshots>
                </repository>
                <repository>
                    <id>apache-snapshots</id>
                    <url>https://repository.apache.org/content/groups/snapshots</url>
                    <layout>default</layout>
                    <releases>
                        <!-- versions-maven-plugin will ignore this repo, even for snapshots,
                             unless we enable releases.
                             This is most likely a bug. -->
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>always</updatePolicy>
                    </snapshots>
                </repository>
            </repositories>
        </profile>

        <profile>
            <id>perf</id>
            <properties>
                <test.performance.enable>true</test.performance.enable>
            </properties>
        </profile>

        <profile>
            <id>IDEA</id>
            <!--
            Dependencies to allow easy project import in IntelliJ IDEA.
            These should not be listed as project dependencies to users
            but are necessary during compile time as they include the
            JBoss Logger annotation processor.
            -->
            <activation>
                <!-- This is a trick to have the profile automatically activated by IDEA -->
                <property>
                    <name>idea.maven.embedder.version</name>
                </property>
            </activation>
            <dependencies>
                <!-- Intellij IDEA doesn't understand <annotationProcessorPaths> in
                     the maven-compiler-plugin configuration, so we need this in order
                     for compilation to work in the IDE. -->
                <dependency>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging-processor</artifactId>
                    <version>${version.org.jboss.logging.jboss-logging-tools}</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.openjdk.jmh</groupId>
                    <artifactId>jmh-generator-annprocess</artifactId>
                    <version>${version.org.openjdk.jmh}</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-compiler-plugin</artifactId>
                            <configuration>
                                <!-- Intellij IDEA only understands the main configuration,
                                     so we need to do this in order for (most) @ProjectionConstructor tests to work fine. -->
                                <compilerArgs combine.self="append">
                                    <compilerArg>-parameters</compilerArg>
                                </compilerArgs>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
