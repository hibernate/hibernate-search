<?xml version="1.0" encoding="UTF-8"?>
<!--
    SPDX-License-Identifier: Apache-2.0
    Copyright Red Hat Inc. and Hibernate Authors
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hibernate.search</groupId>
        <artifactId>hibernate-search-parent-build</artifactId>
        <version>8.1.1.Final</version>
        <relativePath>../build</relativePath>
    </parent>
    <artifactId>hibernate-search-parent-public</artifactId>
    <packaging>pom</packaging>

    <name>Hibernate Search Parent POM for Public Artifacts</name>
    <description>Common build configuration for all public artifacts</description>

    <properties>
        <javadoc.packagelists.directory>${project.build.directory}/dependencies-javadoc-packagelists</javadoc.packagelists.directory>
        <documentation.config.properties.skip>false</documentation.config.properties.skip>
        <!-- This POM is flattened into child POMs, so it doesn't need to be published.
             However, child POMs need to set <deploy.skip>false</deploy.skip> in order to get published.
             -->
        <deploy.skip>true</deploy.skip>
        <!-- This will make sure the build fails if we forget to set <deploy.skip>false</deploy.skip> in a child module -->
        <enforcer.publicModuleIsDeployedRule.skip>false</enforcer.publicModuleIsDeployedRule.skip>
        <!--
            We can only add the annotation processor arguments where the annotation processor will be actually executed.
            If AP is not executed adding arguments will lead to a warning resulting in a build failure.

            So we add it to all public modules, and override it anywhere where we have no logging.
         -->
        <logging.processor.skip.generated.annotation.compiler.argument>-Aorg.jboss.logging.tools.addGeneratedAnnotation=false</logging.processor.skip.generated.annotation.compiler.argument>
        <logging.processor.categories.report.module-name.compiler.argument>-Aorg.hibernate.search.build.loggers.module_name=${project.artifactId}</logging.processor.categories.report.module-name.compiler.argument>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>default-compile</id>
                            <configuration>
                                <annotationProcessorPaths combine.children="append">
                                    <path>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>hibernate-search-build-config</artifactId>
                                        <version>${project.version}</version>
                                    </path>
                                </annotationProcessorPaths>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifestEntries>
                                <Implementation-Title>${project.name}</Implementation-Title>
                                <Implementation-Version>${project.version}</Implementation-Version>
                                <Implementation-Vendor>hibernate.org</Implementation-Vendor>
                                <Implementation-Vendor-Id>hibernate.org</Implementation-Vendor-Id>
                                <Implementation-URL>https://hibernate.org/search/</Implementation-URL>
                                <Automatic-Module-Name>${java.module.name}</Automatic-Module-Name>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${version.javadoc.plugin}</version>
                    <configuration>
                        <!-- Fail on error alternative -->
                        <quiet>true</quiet>
                        <verbose>false</verbose>
                        <failOnWarnings>${failOnJavadocWarning}</failOnWarnings>
                        <failOnError>true</failOnError>
                        <release>${maven.compiler.release}</release>
                        <!-- Exclude implementation classes from the javadoc -->
                        <excludePackageNames>*.impl,*.impl.*</excludePackageNames>
                        <!--
                            This feature tries to set up links between javadoc of different modules.
                            We don't need that since we merge everything together in the end,
                            and it leads to really annoying additional Maven executions
                            that end up publishing build scans on CI,
                            so we disable it.
                         -->
                        <detectOfflineLinks>false</detectOfflineLinks>
                        <!--
                            Make sure to always use offline links,
                            otherwise the build will need to access external websites,
                            which leads to build failures from time to time when the websites are not available
                            (used to happen a lot with apache.org in particular).
                            maven-javadoc-plugin needs a package-list file to determine,
                            for each package/class, the most appropriate link.
                            These files are fetched from javadoc Maven artifacts
                            in the build-config module and regrouped in a single ZIP
                            (see maven-assembly-plugin config in the build-config POM)
                            which is then extracted to target/ in each module that needs to generate javadoc
                            (see maven-dependency-plugin config in this POM).
                          -->
                        <offlineLinks>
                            <offlineLink>
                                <url>${javadoc.org.hibernate.orm.url}</url>
                                <location>${javadoc.packagelists.directory}/hibernate-core</location>
                            </offlineLink>
                            <offlineLink>
                                <url>${javadoc.org.apache.lucene.core.url}</url>
                                <location>${javadoc.packagelists.directory}/lucene-core</location>
                            </offlineLink>
                            <offlineLink>
                                <url>${javadoc.org.apache.lucene.analysis.common.url}</url>
                                <location>${javadoc.packagelists.directory}/lucene-analyzers-common</location>
                            </offlineLink>
                            <offlineLink>
                                <url>${javadoc.org.apache.lucene.queryparser.url}</url>
                                <location>${javadoc.packagelists.directory}/lucene-queryparser</location>
                            </offlineLink>
                            <!-- For jakarta.batch in the Jakarta Batch modules -->
                            <offlineLink>
                                <url>${javadoc.jakarta.batch.url}</url>
                                <location>${javadoc.packagelists.directory}/batch-api</location>
                            </offlineLink>
                        </offlineLinks>
                        <bottom>
                            <![CDATA[Copyright &copy; ${project.inceptionYear}-{currentYear} <a href="https://www.redhat.com/">Red Hat, Inc.</a> and Hibernate Authors. Licensed under the <a href="https://www.apache.org/licenses/LICENSE-2.0.txt">Apache License version 2.0 (Apache-2.0)</a>.]]>
                        </bottom>
                        <additionalDependencies>
                            <additionalDependency>
                                <groupId>org.jboss.logging</groupId>
                                <artifactId>jboss-logging-annotations</artifactId>
                                <version>${version.org.jboss.logging.jboss-logging-tools}</version>
                            </additionalDependency>
                        </additionalDependencies>
                        <tags>
                            <tag>
                                <name>hsearch.experimental</name>
                                <placement>a</placement>
                                <head>Experimental</head>
                            </tag>
                        </tags>
                        <additionalOptions>
                            <!-- Java 9+ supports HTML5 for javadoc generation -->
                            <additionalOption>-html5</additionalOption>
                            <!-- Java 17+ adds a warning for every single class/method/etc. without a javadoc comment,
                                 and we have lots of those.
                                 The only way to disable those warnings is to disable the group of checks "missing",
                                 and unfortunately this also disables checks such as "no @return" or "missing @param".
                                 I've looked into the javadoc code and there doesn't seem to be a more precise setting.
                                 See https://github.com/openjdk/jdk/blob/9862cd07c162fcc9cd5cbdd0aab564f446f9256c/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlOptions.java#L428-L439
                                 See https://github.com/openjdk/jdk/blob/9862cd07c162fcc9cd5cbdd0aab564f446f9256c/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclint/DocLint.java#L367
                                 See https://github.com/openjdk/jdk/blob/9862cd07c162fcc9cd5cbdd0aab564f446f9256c/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclint/Messages.java#L181-L182
                                 See https://github.com/openjdk/jdk/blob/9862cd07c162fcc9cd5cbdd0aab564f446f9256c/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclint/Messages.java#L74-L78
                                  -->
                            <additionalOption>-Xdoclint:all,-missing</additionalOption>
                        </additionalOptions>
                        <stylesheetfile>${project.build.directory}/hibernate-asciidoctor-theme/javadoc/jdk21/stylesheet.css</stylesheetfile>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-custom-published-modules-rules</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforcer.publicModuleIsDeployedRule.skip}</skip>
                            <rules>
                                <publicModuleIsDeployedRule/>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.hibernate.search</groupId>
                        <artifactId>hibernate-search-build-enforcer</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.moditect</groupId>
                <artifactId>moditect-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-module-infos</id>
                        <phase>package</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <module>
                                <moduleInfo>
                                    <name>${java.module.name}</name>
                                    <!-- Exports:
                                             - all impl packages to org.hibernate.engine so that it can instantiate built-in
                                               beans using reflection (e.g. annotation processors, bridges, binders)
                                             - all non-impl (api, spi) packages to everyone
                                     -->
                                    <exports>
                                        org.hibernate.search.*.impl to org.hibernate.search.engine;
                                        *;
                                    </exports>
                                    <!-- Requires:
                                             - impl/internal Hibernate ORM and Hibernate Search packages are required non-transitively
                                             - all other Hibernate ORM and Hibernate Search packages are required transitively
                                             - all other packages are required non-transitively
                                     -->
                                    <requires>
                                        org.hibernate.*.impl;
                                        org.hibernate.*.internal;
                                        org.hibernate.*.impl.*;
                                        org.hibernate.*.internal.*;
                                        transitive org.hibernate.*;
                                        *;
                                    </requires>
                                </moduleInfo>
                            </module>
                            <jdepsExtraArgs>
                                <!--
                                    Running the jdeps tool will fail without this option, if there are any multi-release jars
                                    on the path. And since some modules might have such jars, e.g. util-common has Jandex,
                                    it's safer to add this additional option:
                                -->
                                <arg>--multi-release=${java-version.main.release}</arg>
                            </jdepsExtraArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dist</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-dependencies-javadoc-packagelists</id>
                                <phase>${javadoc.download.phase}</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>hibernate-search-build-config</artifactId>
                                            <classifier>dependencies-javadoc-packagelists</classifier>
                                            <type>zip</type>
                                            <version>${project.version}</version>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${javadoc.packagelists.directory}</outputDirectory>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-asciidoctor-theme</id>
                                <phase>${javadoc.download.phase}</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.hibernate.infra</groupId>
                                            <artifactId>hibernate-asciidoctor-theme</artifactId>
                                            <version>${version.org.hibernate.infra.hibernate-asciidoctor-theme}</version>
                                            <type>zip</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <!--
                                This ensures that using mvn install -pl <some project> -am
                                will correctly force the build of the build-config module.
                             -->
                            <dependency>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>hibernate-search-build-config</artifactId>
                                <classifier>dependencies-javadoc-packagelists</classifier>
                                <type>zip</type>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-javadoc</id>
                                <goals>
                                    <goal>javadoc-no-fork</goal>
                                </goals>
                                <phase>process-resources</phase>
                            </execution>
                            <execution>
                                <!--
                                    This is the default name of an execution that is added automatically if release profile is enabled.
                                    We want to "override" it so that we can control when it is actually executed.
                                 -->
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <phase>${javadoc.generate.jar.phase}</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>collect-configuration-properties</id>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <phase>${documentation.config.properties.phase}</phase>
                                <configuration>
                                    <skip>${documentation.config.properties.skip}</skip>
                                    <mainClass>org.hibernate.search.configuration.properties.collector.impl.ConfigurationPropertyProcessor</mainClass>
                                    <arguments>
                                        <argument>${javadoc.org.hibernate.search.url}</argument>
                                        <argument>${project.build.directory}</argument>
                                        <argument>${documentation.config.properties.output.directory}</argument>
                                        <argument>${project.artifactId}</argument>
                                        <argument>${project.name}</argument>
                                        <argument>${javadoc.generate.html.directory}</argument>
                                    </arguments>
                                    <includePluginDependencies>true</includePluginDependencies>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.hibernate.search</groupId>
                                <artifactId>hibernate-search-configuration-properties-collector</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jqassistant</id>
            <build>
                <plugins>
                    <!--
                         This is the last module: we want to execute analysis here so as to fail the build if anything is wrong.
                         Reminder: jqassistant only executes analysis in the last module of the build,
                         so if we skip it in the last module, it just won't execute analysis... ever.
                     -->
                    <plugin>
                        <groupId>com.buschmais.jqassistant</groupId>
                        <artifactId>jqassistant-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
