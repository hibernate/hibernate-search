diff --git a/integrationtest/mapper/pojo-base/src/test/java/org/hibernate/search/integrationtest/mapper/pojo/mapping/definition/RoutingKeyBindingBaseIT.java b/integrationtest/mapper/pojo-base/src/test/java/org/hibernate/search/integrationtest/mapper/pojo/mapping/definition/RoutingKeyBindingBaseIT.java
index db08dae0db..89803ef99f 100644
--- a/integrationtest/mapper/pojo-base/src/test/java/org/hibernate/search/integrationtest/mapper/pojo/mapping/definition/RoutingKeyBindingBaseIT.java
+++ b/integrationtest/mapper/pojo-base/src/test/java/org/hibernate/search/integrationtest/mapper/pojo/mapping/definition/RoutingKeyBindingBaseIT.java
@@ -11,12 +11,8 @@
 import org.hibernate.search.integrationtest.mapper.pojo.testsupport.util.rule.JavaBeanMappingSetupHelper;
 import org.hibernate.search.mapper.javabean.mapping.SearchMapping;
 import org.hibernate.search.mapper.pojo.bridge.binding.RoutingKeyBindingContext;
-import org.hibernate.search.mapper.pojo.bridge.mapping.annotation.RoutingKeyBinderRef;
-import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder;
-import org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContext;
 import org.hibernate.search.mapper.pojo.mapping.definition.annotation.DocumentId;
 import org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed;
-import org.hibernate.search.mapper.pojo.mapping.definition.annotation.RoutingKeyBinding;
 import org.hibernate.search.util.common.SearchException;
 import org.hibernate.search.util.impl.integrationtest.common.FailureReportUtils;
 import org.hibernate.search.util.impl.integrationtest.common.rule.BackendMock;
@@ -27,7 +23,7 @@
 import org.junit.Test;
 
 /**
- * Test common use cases of the {@link RoutingKeyBinding} annotation.
+ * Test common use cases of the {@link org.hibernate.search.mapper.pojo.mapping.definition.annotation.RoutingKeyBinding} annotation.
  */
 @SuppressWarnings({"unused", "deprecation"})
 @TestForIssue(jiraKey = "HSEARCH-3135")
@@ -56,7 +52,8 @@ public void simple() {
 	}
 
 	@Indexed(index = INDEX_NAME)
-	@RoutingKeyBinding(binder = @RoutingKeyBinderRef(type = WorkingRoutingKeyBinder.class))
+	@org.hibernate.search.mapper.pojo.mapping.definition.annotation.RoutingKeyBinding(
+			binder = @org.hibernate.search.mapper.pojo.bridge.mapping.annotation.RoutingKeyBinderRef(type = WorkingRoutingKeyBinder.class))
 	private static class IndexedEntityWithWorkingRoutingKeyBinding {
 		Integer id;
 		@DocumentId
@@ -65,12 +62,12 @@ public Integer getId() {
 		}
 	}
 
-	public static class WorkingRoutingKeyBinder implements RoutingKeyBinder {
+	public static class WorkingRoutingKeyBinder implements org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder {
 		@Override
 		public void bind(RoutingKeyBindingContext context) {
 			context.dependencies().useRootOnly();
 			context.bridge( (String tenantIdentifier, Object entityIdentifier, Object bridgedElement,
-						RoutingKeyBridgeToRoutingKeyContext context1) -> {
+					org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContext context1) -> {
 				throw new UnsupportedOperationException( "Should not be called " );
 			} );
 		}
@@ -79,7 +76,8 @@ public void bind(RoutingKeyBindingContext context) {
 	@Test
 	public void missingBinderReference() {
 		@Indexed
-		@RoutingKeyBinding(binder = @RoutingKeyBinderRef)
+		@org.hibernate.search.mapper.pojo.mapping.definition.annotation.RoutingKeyBinding(
+				binder = @org.hibernate.search.mapper.pojo.bridge.mapping.annotation.RoutingKeyBinderRef)
 		class IndexedEntity {
 			Integer id;
 			@DocumentId
@@ -93,7 +91,7 @@ public Integer getId() {
 				.isInstanceOf( SearchException.class )
 				.hasMessageMatching( FailureReportUtils.buildFailureReportPattern()
 						.typeContext( IndexedEntity.class.getName() )
-						.annotationContextAnyParameters( RoutingKeyBinding.class )
+						.annotationContextAnyParameters( org.hibernate.search.mapper.pojo.mapping.definition.annotation.RoutingKeyBinding.class )
 						.failure( "The binder reference is empty." )
 						.build()
 				);
diff --git a/integrationtest/mapper/pojo-base/src/test/java/org/hibernate/search/integrationtest/mapper/pojo/routing/RoutingRoutingKeyBridgeIT.java b/integrationtest/mapper/pojo-base/src/test/java/org/hibernate/search/integrationtest/mapper/pojo/routing/RoutingRoutingKeyBridgeIT.java
index e7143717e7..90727261cc 100644
--- a/integrationtest/mapper/pojo-base/src/test/java/org/hibernate/search/integrationtest/mapper/pojo/routing/RoutingRoutingKeyBridgeIT.java
+++ b/integrationtest/mapper/pojo-base/src/test/java/org/hibernate/search/integrationtest/mapper/pojo/routing/RoutingRoutingKeyBridgeIT.java
@@ -14,11 +14,8 @@
 import org.hibernate.search.mapper.javabean.common.EntityReference;
 import org.hibernate.search.mapper.javabean.mapping.SearchMapping;
 import org.hibernate.search.mapper.javabean.session.SearchSession;
-import org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge;
 import org.hibernate.search.mapper.pojo.bridge.binding.RoutingKeyBindingContext;
-import org.hibernate.search.mapper.pojo.bridge.mapping.annotation.RoutingKeyBinderRef;
 import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder;
-import org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContext;
 import org.hibernate.search.mapper.pojo.mapping.definition.annotation.DocumentId;
 import org.hibernate.search.mapper.pojo.mapping.definition.annotation.GenericField;
 import org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed;
@@ -147,7 +144,8 @@ public void search() {
 	}
 
 	@Indexed(index = IndexedEntity.INDEX)
-	@RoutingKeyBinding(binder = @RoutingKeyBinderRef(type = MyRoutingKeyBridge.Binder.class))
+	@RoutingKeyBinding(binder = @org.hibernate.search.mapper.pojo.bridge.mapping.annotation.RoutingKeyBinderRef(
+			type = MyRoutingKeyBridge.Binder.class))
 	public static final class IndexedEntity {
 
 		public static final String INDEX = "IndexedEntity";
@@ -186,7 +184,7 @@ public void setValue(String value) {
 
 	}
 
-	public static final class MyRoutingKeyBridge implements RoutingKeyBridge {
+	public static final class MyRoutingKeyBridge implements org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge {
 
 		private final PojoElementAccessor<EntityCategory> categoryAccessor;
 
@@ -196,7 +194,7 @@ private MyRoutingKeyBridge(PojoElementAccessor<EntityCategory> categoryAccessor)
 
 		@Override
 		public String toRoutingKey(String tenantIdentifier, Object entityIdentifier, Object bridgedElement,
-				RoutingKeyBridgeToRoutingKeyContext context) {
+				org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContext context) {
 			EntityCategory category = categoryAccessor.read( bridgedElement );
 			StringBuilder keyBuilder = new StringBuilder();
 			if ( tenantIdentifier != null ) {
diff --git a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/binding/impl/BoundRoutingKeyBridge.java b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/binding/impl/BoundRoutingKeyBridge.java
index c0cc33653d..8e804e812f 100644
--- a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/binding/impl/BoundRoutingKeyBridge.java
+++ b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/binding/impl/BoundRoutingKeyBridge.java
@@ -7,17 +7,17 @@
 package org.hibernate.search.mapper.pojo.bridge.binding.impl;
 
 import org.hibernate.search.engine.environment.bean.BeanHolder;
-import org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge;
 import org.hibernate.search.mapper.pojo.automaticindexing.building.impl.PojoIndexingDependencyCollectorTypeNode;
 import org.hibernate.search.mapper.pojo.bridge.runtime.impl.RoutingKeyBridgeRoutingBridgeAdapter;
 import org.hibernate.search.mapper.pojo.model.dependency.impl.PojoTypeIndexingDependencyConfigurationContextImpl;
 import org.hibernate.search.mapper.pojo.model.impl.PojoModelTypeRootElement;
 
+@SuppressWarnings("deprecation")
 public final class BoundRoutingKeyBridge<T> extends BoundRoutingBridge<T> {
 	private final PojoModelTypeRootElement<T> pojoModelRootElement;
 	private final PojoTypeIndexingDependencyConfigurationContextImpl<T> pojoDependencyContext;
 
-	BoundRoutingKeyBridge(BeanHolder<? extends RoutingKeyBridge> bridgeHolder,
+	BoundRoutingKeyBridge(BeanHolder<? extends org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge> bridgeHolder,
 			PojoModelTypeRootElement<T> pojoModelRootElement,
 			PojoTypeIndexingDependencyConfigurationContextImpl<T> pojoDependencyContext) {
 		super( BeanHolder.of( new RoutingKeyBridgeRoutingBridgeAdapter<>( bridgeHolder ) ),
diff --git a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/binding/impl/RoutingKeyBindingContextImpl.java b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/binding/impl/RoutingKeyBindingContextImpl.java
index 70eb1d7b21..b06d123faf 100644
--- a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/binding/impl/RoutingKeyBindingContextImpl.java
+++ b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/binding/impl/RoutingKeyBindingContextImpl.java
@@ -11,7 +11,6 @@
 import org.hibernate.search.engine.environment.bean.BeanHolder;
 import org.hibernate.search.engine.environment.bean.BeanResolver;
 import org.hibernate.search.engine.mapper.mapping.building.spi.IndexedEntityBindingContext;
-import org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge;
 import org.hibernate.search.mapper.pojo.bridge.binding.RoutingKeyBindingContext;
 import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder;
 import org.hibernate.search.mapper.pojo.logging.impl.Log;
@@ -23,6 +22,7 @@
 import org.hibernate.search.util.common.impl.SuppressingCloser;
 import org.hibernate.search.util.common.logging.impl.LoggerFactory;
 
+@SuppressWarnings("deprecation")
 public class RoutingKeyBindingContextImpl<T> extends AbstractCompositeBindingContext
 		implements RoutingKeyBindingContext {
 
@@ -45,12 +45,12 @@ public RoutingKeyBindingContextImpl(BeanResolver beanResolver,
 	}
 
 	@Override
-	public void bridge(RoutingKeyBridge bridge) {
+	public void bridge(org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge bridge) {
 		bridge( BeanHolder.of( bridge ) );
 	}
 
 	@Override
-	public void bridge(BeanHolder<? extends RoutingKeyBridge> bridgeHolder) {
+	public void bridge(BeanHolder<? extends org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge> bridgeHolder) {
 		this.partialBinding = new PartialBinding<>( bridgeHolder );
 	}
 
diff --git a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/runtime/impl/RoutingKeyBridgeRoutingBridgeAdapter.java b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/runtime/impl/RoutingKeyBridgeRoutingBridgeAdapter.java
index c34c9c5213..ae61b344b8 100644
--- a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/runtime/impl/RoutingKeyBridgeRoutingBridgeAdapter.java
+++ b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/runtime/impl/RoutingKeyBridgeRoutingBridgeAdapter.java
@@ -7,18 +7,17 @@
 package org.hibernate.search.mapper.pojo.bridge.runtime.impl;
 
 import org.hibernate.search.engine.environment.bean.BeanHolder;
-import org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge;
-import org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContext;
 import org.hibernate.search.mapper.pojo.route.DocumentRoutes;
 import org.hibernate.search.mapper.pojo.bridge.RoutingBridge;
 import org.hibernate.search.mapper.pojo.bridge.runtime.RoutingBridgeRouteContext;
 import org.hibernate.search.util.common.impl.Closer;
 
+@SuppressWarnings("deprecation")
 public class RoutingKeyBridgeRoutingBridgeAdapter<E> implements RoutingBridge<E> {
 
-	private final BeanHolder<? extends RoutingKeyBridge> bridgeHolder;
+	private final BeanHolder<? extends org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge> bridgeHolder;
 
-	public RoutingKeyBridgeRoutingBridgeAdapter(BeanHolder<? extends RoutingKeyBridge> bridgeHolder) {
+	public RoutingKeyBridgeRoutingBridgeAdapter(BeanHolder<? extends org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge> bridgeHolder) {
 		this.bridgeHolder = bridgeHolder;
 	}
 
@@ -40,7 +39,7 @@ public void close() {
 	@Override
 	public void route(DocumentRoutes routes, Object entityIdentifier, E indexedEntity, RoutingBridgeRouteContext context) {
 		String routingKey = bridgeHolder.get().toRoutingKey( context.tenantIdentifier(), entityIdentifier,
-				indexedEntity, (RoutingKeyBridgeToRoutingKeyContext) context );
+				indexedEntity, (org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContext) context );
 		routes.addRoute().routingKey( routingKey );
 	}
 
diff --git a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/runtime/impl/SessionBasedBridgeOperationContext.java b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/runtime/impl/SessionBasedBridgeOperationContext.java
index 71b6244ff8..1b7bff4726 100644
--- a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/runtime/impl/SessionBasedBridgeOperationContext.java
+++ b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/bridge/runtime/impl/SessionBasedBridgeOperationContext.java
@@ -11,8 +11,6 @@
 import org.hibernate.search.mapper.pojo.bridge.runtime.IdentifierBridgeFromDocumentIdentifierContextExtension;
 import org.hibernate.search.mapper.pojo.bridge.runtime.PropertyBridgeWriteContext;
 import org.hibernate.search.mapper.pojo.bridge.runtime.PropertyBridgeWriteContextExtension;
-import org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContext;
-import org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContextExtension;
 import org.hibernate.search.mapper.pojo.bridge.runtime.TypeBridgeWriteContext;
 import org.hibernate.search.mapper.pojo.bridge.runtime.TypeBridgeWriteContextExtension;
 import org.hibernate.search.mapper.pojo.bridge.runtime.ValueBridgeFromIndexedValueContext;
@@ -28,10 +26,11 @@
  * since the only feature provided by each interface is an access to the extension.
  * This might change in the future, though, which is why the interfaces themselves are split.
  */
+@SuppressWarnings("deprecation")
 public final class SessionBasedBridgeOperationContext
 		implements IdentifierBridgeFromDocumentIdentifierContext,
 				RoutingBridgeRouteContext,
-				RoutingKeyBridgeToRoutingKeyContext,
+				org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContext,
 				TypeBridgeWriteContext,
 				PropertyBridgeWriteContext,
 				ValueBridgeFromIndexedValueContext {
@@ -58,7 +57,7 @@ public String tenantIdentifier() {
 	}
 
 	@Override
-	public <T> T extension(RoutingKeyBridgeToRoutingKeyContextExtension<T> extension) {
+	public <T> T extension(org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContextExtension<T> extension) {
 		return DslExtensionState.returnIfSupported( extension, extension.extendOptional( this, sessionContext ) );
 	}
 
diff --git a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/building/impl/PojoIndexModelBinder.java b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/building/impl/PojoIndexModelBinder.java
index 6dd46e7c2f..a309ea7032 100644
--- a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/building/impl/PojoIndexModelBinder.java
+++ b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/building/impl/PojoIndexModelBinder.java
@@ -15,13 +15,11 @@
 import org.hibernate.search.mapper.pojo.bridge.binding.ValueBindingContext;
 import org.hibernate.search.mapper.pojo.bridge.binding.impl.BoundIdentifierBridge;
 import org.hibernate.search.mapper.pojo.bridge.binding.impl.BoundPropertyBridge;
-import org.hibernate.search.mapper.pojo.bridge.binding.impl.BoundRoutingKeyBridge;
 import org.hibernate.search.mapper.pojo.bridge.binding.impl.BoundTypeBridge;
 import org.hibernate.search.mapper.pojo.bridge.binding.impl.BoundValueBridge;
 import org.hibernate.search.mapper.pojo.bridge.binding.spi.FieldModelContributor;
 import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.IdentifierBinder;
 import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.PropertyBinder;
-import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder;
 import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.TypeBinder;
 import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.ValueBinder;
 import org.hibernate.search.mapper.pojo.extractor.ContainerExtractor;
@@ -58,8 +56,10 @@
 			IndexedEntityBindingContext bindingContext,
 			BoundPojoModelPathPropertyNode<?, I> modelPath, IdentifierBinder binder);
 
-	<T> BoundRoutingKeyBridge<T> bindRoutingKey(IndexedEntityBindingContext bindingContext,
-			BoundPojoModelPathTypeNode<T> modelPath, RoutingKeyBinder binder);
+	@SuppressWarnings("deprecation")
+	<T> org.hibernate.search.mapper.pojo.bridge.binding.impl.BoundRoutingKeyBridge<T> bindRoutingKey(
+			IndexedEntityBindingContext bindingContext,
+			BoundPojoModelPathTypeNode<T> modelPath, org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder binder);
 
 	<T> Optional<BoundTypeBridge<T>> bindType(IndexBindingContext bindingContext,
 			BoundPojoModelPathTypeNode<T> modelPath, TypeBinder binder);
diff --git a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/definition/annotation/RoutingKeyBinding.java b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/definition/annotation/RoutingKeyBinding.java
index a163f0a0ef..5210051a49 100644
--- a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/definition/annotation/RoutingKeyBinding.java
+++ b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/definition/annotation/RoutingKeyBinding.java
@@ -13,7 +13,6 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge;
 import org.hibernate.search.mapper.pojo.bridge.mapping.annotation.RoutingKeyBinderRef;
 import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder;
 import org.hibernate.search.mapper.pojo.mapping.definition.annotation.processing.TypeMapping;
@@ -23,7 +22,7 @@
 
 /**
  * Maps an indexed type to its routing keys using a {@link RoutingKeyBinder},
- * which will define a {@link RoutingKeyBridge}.
+ * which will define a {@link org.hibernate.search.mapper.pojo.bridge.RoutingKeyBridge}.
  * <p>
  * See the reference documentation for more information about bridges in general,
  * and routing key bridges in particular.
diff --git a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/definition/programmatic/TypeMappingStep.java b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/definition/programmatic/TypeMappingStep.java
index 514641806c..560617da9e 100644
--- a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/definition/programmatic/TypeMappingStep.java
+++ b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/mapping/definition/programmatic/TypeMappingStep.java
@@ -6,7 +6,6 @@
  */
 package org.hibernate.search.mapper.pojo.mapping.definition.programmatic;
 
-import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder;
 import org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.TypeBinder;
 import org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed;
 
@@ -24,14 +23,14 @@
 	TypeMappingIndexedStep indexed();
 
 	/**
-	 * @param binder A {@link RoutingKeyBinder} responsible for creating a bridge.
+	 * @param binder A {@link org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder} responsible for creating a bridge.
 	 * @return {@code this}, for method chaining.
-	 * @see RoutingKeyBinder
+	 * @see org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder
 	 * @deprecated Apply a {@link org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingBinder}
 	 * with {@code indexed().routingBinder(...)} instead.
 	 */
 	@Deprecated
-	TypeMappingStep routingKeyBinder(RoutingKeyBinder binder);
+	TypeMappingStep routingKeyBinder(org.hibernate.search.mapper.pojo.bridge.mapping.programmatic.RoutingKeyBinder binder);
 
 	/**
 	 * @param binder A {@link TypeBinder} responsible for creating a bridge.
diff --git a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/session/spi/AbstractPojoSearchSession.java b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/session/spi/AbstractPojoSearchSession.java
index 95b0fedb9d..d77c6b4b0c 100644
--- a/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/session/spi/AbstractPojoSearchSession.java
+++ b/mapper/pojo-base/src/main/java/org/hibernate/search/mapper/pojo/session/spi/AbstractPojoSearchSession.java
@@ -11,7 +11,6 @@
 import org.hibernate.search.mapper.pojo.bridge.runtime.IdentifierBridgeFromDocumentIdentifierContext;
 import org.hibernate.search.mapper.pojo.bridge.runtime.PropertyBridgeWriteContext;
 import org.hibernate.search.mapper.pojo.bridge.runtime.RoutingBridgeRouteContext;
-import org.hibernate.search.mapper.pojo.bridge.runtime.RoutingKeyBridgeToRoutingKeyContext;
 import org.hibernate.search.mapper.pojo.bridge.runtime.TypeBridgeWriteContext;
 import org.hibernate.search.mapper.pojo.bridge.runtime.ValueBridgeFromIndexedValueContext;
 import org.hibernate.search.mapper.pojo.bridge.runtime.impl.SessionBasedBridgeOperationContext;
